kind: pipeline
name: default-frame

clone:
  disable: true

steps:
  - name: test
    image: golang:1.16.2
    environment:
      SERVER_HOST: 114.116.212.202
      ENV: test
      PROJECT_ORI_DIR: /www/project
      PROJECT_NAME: zgoframe
      CONFIG_PROJTECT_NAME: configcenter
      TARGET_GIT_PROJECT_DIR: /www/git_project
      GIT_ORI_URL: git://github.com/mqzhifu

      KNOWN_HOST_202:
        from_secret: KNOWN_HOST_202
      ID_RSA_202:
        from_secret: ID_RSA_202
    commands:
      - id
      - date


      - export TARGET_GIT_PROJECT_BUILD_ORI_DIR=$TARGET_GIT_PROJECT_DIR/$PROJECT_NAME
      - export PROJECT_DIR=$PROJECT_ORI_DIR/$PROJECT_NAME

      - echo "debug SERVER_HOST:$SERVER_HOST ENV:$ENV PROJECT_NAME:$PROJECT_NAME CONFIG_PROJTECT_NAME:CONFIG_PROJTECT_NAME   GIT_ORI_URL:$GIT_ORI_URL "
      - echo "debug TARGET_GIT_PROJECT_DIR:$TARGET_GIT_PROJECT_DIR TARGET_GIT_PROJECT_BUILD_ORI_DIR:$TARGET_GIT_PROJECT_BUILD_ORI_DIR PROJECT_DIR:$PROJECT_DIR"

      - mkdir -p /root/.ssh
      - echo "$KNOWN_HOST_202" > /root/.ssh/known_hosts
      - echo "$ID_RSA_202" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa && chmod 700 /root/.ssh

      - pwd
      - go version
      - git clone $GIT_ORI_URL/$PROJECT_NAME.git
      - cd $PROJECT_NAME
      - ls -l



      - export CI_COMMIT_TIME=$(git show -s --format=%ct)
      - export CI_COMMIT_TIME_FORMATTED=`TZ='Asia/Shanghai' date -d @"$CI_COMMIT_TIME" "+%Y%m%d_%H%M%S"`
      - export CI_COMMIT_ID=$(git rev-parse --short HEAD)
      - export APP_NAME_FULL="$CI_COMMIT_TIME_FORMATTED-$CI_COMMIT_ID"

      - export PROJECT_DIR_FINAL=$PROJECT_DIR/$APP_NAME_FULL
      - export BUILD_DIR="$TARGET_GIT_PROJECT_BUILD_ORI_DIR/$APP_NAME_FULL"

      - echo "debug APP_NAME_FULL:$APP_NAME_FULL PROJECT_DIR_FINAL:$PROJECT_DIR_FINAL BUILD_DIR:$BUILD_DIR"


      - ssh root@"$SERVER_HOST" "if [ -f $TARGET_GIT_PROJECT_BUILD_ORI_DIR ]; then mkdir $TARGET_GIT_PROJECT_BUILD_ORI_DIR; chmod 777 $TARGET_GIT_PROJECT_BUILD_ORI_DIR; fi;"
      - ssh root@"$SERVER_HOST" "mkdir $BUILD_DIR ; chmod 777 $BUILD_DIR "
      - rm -rf .git
      - scp -r ./* root@$SERVER_HOST:$BUILD_DIR

      - ssh root@"$SERVER_HOST" "ls -l $BUILD_DIR"
      - ssh root@"$SERVER_HOST" "go version"
      - ssh root@"$SERVER_HOST" "go env -w GO111MODULE=on ; go env -w GOPROXY=https://goproxy.cn,direct "
      - ssh root@"$SERVER_HOST" "cd  $BUILD_DIR; go mod tidy ; go mod download"
      - ssh root@"$SERVER_HOST" "cd  $BUILD_DIR; go build -o $PROJECT_NAME "
      - ssh root@"$SERVER_HOST" "cd  $BUILD_DIR; du -m $PROJECT_NAME"
      - ssh root@"$SERVER_HOST" "$BUILD_DIR/$PROJECT_NAME -h"


      - ssh root@"$SERVER_HOST" "mkdir -p $PROJECT_DIR_FINAL ; mkdir $PROJECT_DIR_FINAL/logs; chmod 777 $PROJECT_DIR_FINAL/logs"
      - ssh root@"$SERVER_HOST" "cp $BUILD_DIR/$PROJECT_NAME $PROJECT_DIR_FINAL"
      - ssh root@"$SERVER_HOST" "cd $PROJECT_ORI_DIR/$CONFIG_PROJTECT_NAME/$PROJECT_NAME/$ENV/ ; ls -l"
      - ssh root@"$SERVER_HOST" "cp $PROJECT_ORI_DIR/$CONFIG_PROJTECT_NAME/$PROJECT_NAME/$ENV/config.toml $PROJECT_DIR_FINAL/"
      - ssh root@"$SERVER_HOST" "if [ $(ps -ef |grep $PROJECT_NAME|grep -v grep|wc -l) -gt 0 ];then echo processexist-need kill ;else echo process-not-exist;fi"

      - ssh root@"$SERVER_HOST" "cd $PROJECT_DIR_FINAL;./$PROJECT_NAME -e test -dep 1"
      - echo "process exec ok~"


