kind: pipeline
type: docker
name: default-frame

clone:
  disable: true


environment:

  PROJECT_NAME: zgoframe

steps:

  - name: test
    image: golang:1.16.2
    when:
      branch: master
      event: [ push ]
    environment:

      ENV: test
      KNOWN_HOST_202:
        from_secret: KNOWN_HOST_202
      ID_RSA_202:
        from_secret: ID_RSA_202

    commands:
      - id ; date ; pwd
      - go version

      - git clone $GIT_URL_PROTOCOL:$GIT_URL_PREFIX/$PROJECT_NAME.git
      - cd $PROJECT_NAME
      - ls -l
      - chmod 777 $CICD_INIT_SH_NAME
      - ./$CICD_INIT_SH_NAME $TEST_SERVER_HOST $PROJECT_ORI_DIR $TARGET_GIT_PROJECT_DIR $CONFIG_PROJTECT_NAME $PROJECT_NAME $ENV_FILE
      - cat $ENV_FILE
      - . $ENV_FILE

      - ssh root@"$SERVER_HOST" "if [ ! -d $TARGET_GIT_PROJECT_BUILD_ORI_DIR ]; then mkdir $TARGET_GIT_PROJECT_BUILD_ORI_DIR; chmod 777 $TARGET_GIT_PROJECT_BUILD_ORI_DIR; fi;"
      - ssh root@"$SERVER_HOST" "mkdir $BUILD_DIR ; chmod 777 $BUILD_DIR "
      - rm -rf .git
      - scp -r ./* root@$SERVER_HOST:$BUILD_DIR

      - ssh root@"$SERVER_HOST" "ls -l $BUILD_DIR"
      - ssh root@"$SERVER_HOST" "go version"
      - ssh root@"$SERVER_HOST" "go env -w GO111MODULE=on ; go env -w GOPROXY=https://goproxy.cn,direct "
      - ssh root@"$SERVER_HOST" "cd  $BUILD_DIR; go mod tidy ; go mod download"
      - ssh root@"$SERVER_HOST" "cd  $BUILD_DIR; go build -o $PROJECT_NAME "
      - ssh root@"$SERVER_HOST" "cd  $BUILD_DIR; du -m $PROJECT_NAME"
      - ssh root@"$SERVER_HOST" "$BUILD_DIR/$PROJECT_NAME -h"


      - ssh root@"$SERVER_HOST" "mkdir -p $PROJECT_DIR_FINAL ; mkdir $PROJECT_DIR/logs; chmod 777 $PROJECT_DIR/logs"
      - ssh root@"$SERVER_HOST" "cp $BUILD_DIR/$PROJECT_NAME $PROJECT_DIR_FINAL"
      - ssh root@"$SERVER_HOST" "cd $PROJECT_ORI_DIR/$CONFIG_PROJTECT_NAME/$PROJECT_NAME/$ENV/ ; ls -l"
      - ssh root@"$SERVER_HOST" "cp $PROJECT_ORI_DIR/$CONFIG_PROJTECT_NAME/$PROJECT_NAME/$ENV/config.toml $PROJECT_DIR_FINAL/"



      - ssh root@"$SERVER_HOST" "chmod 777 $BUILD_DIR/checkprocess.sh ; $BUILD_DIR/checkprocess.sh test /tmp/$PROJECT_NAME.pid"

      - ssh root@"$SERVER_HOST" "if [ -d $PROJECT_DIR/$PROJECT_NAME ];then rm -rf $PROJECT_DIR/$PROJECT_NAME fi; "
      - ssh root@"$SERVER_HOST" "ln -s $PROJECT_DIR_FINAL $PROJECT_DIR/$PROJECT_NAME "


