// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/frame_sync.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestPlayerOperations struct {
	Id                   int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomId               string       `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32        `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Operations           []*Operation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RequestPlayerOperations) Reset()         { *m = RequestPlayerOperations{} }
func (m *RequestPlayerOperations) String() string { return proto.CompactTextString(m) }
func (*RequestPlayerOperations) ProtoMessage()    {}
func (*RequestPlayerOperations) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{0}
}

func (m *RequestPlayerOperations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPlayerOperations.Unmarshal(m, b)
}
func (m *RequestPlayerOperations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPlayerOperations.Marshal(b, m, deterministic)
}
func (m *RequestPlayerOperations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPlayerOperations.Merge(m, src)
}
func (m *RequestPlayerOperations) XXX_Size() int {
	return xxx_messageInfo_RequestPlayerOperations.Size(m)
}
func (m *RequestPlayerOperations) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPlayerOperations.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPlayerOperations proto.InternalMessageInfo

func (m *RequestPlayerOperations) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RequestPlayerOperations) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RequestPlayerOperations) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *RequestPlayerOperations) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type Operation struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Event                string   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	PlayerId             int32    `protobuf:"varint,4,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{1}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Operation) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Operation) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Operation) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type RequestPlayerResumeGame struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32    `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPlayerResumeGame) Reset()         { *m = RequestPlayerResumeGame{} }
func (m *RequestPlayerResumeGame) String() string { return proto.CompactTextString(m) }
func (*RequestPlayerResumeGame) ProtoMessage()    {}
func (*RequestPlayerResumeGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{2}
}

func (m *RequestPlayerResumeGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPlayerResumeGame.Unmarshal(m, b)
}
func (m *RequestPlayerResumeGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPlayerResumeGame.Marshal(b, m, deterministic)
}
func (m *RequestPlayerResumeGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPlayerResumeGame.Merge(m, src)
}
func (m *RequestPlayerResumeGame) XXX_Size() int {
	return xxx_messageInfo_RequestPlayerResumeGame.Size(m)
}
func (m *RequestPlayerResumeGame) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPlayerResumeGame.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPlayerResumeGame proto.InternalMessageInfo

func (m *RequestPlayerResumeGame) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RequestPlayerResumeGame) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RequestPlayerResumeGame) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type RequestPlayerMatchSign struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPlayerMatchSign) Reset()         { *m = RequestPlayerMatchSign{} }
func (m *RequestPlayerMatchSign) String() string { return proto.CompactTextString(m) }
func (*RequestPlayerMatchSign) ProtoMessage()    {}
func (*RequestPlayerMatchSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{3}
}

func (m *RequestPlayerMatchSign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPlayerMatchSign.Unmarshal(m, b)
}
func (m *RequestPlayerMatchSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPlayerMatchSign.Marshal(b, m, deterministic)
}
func (m *RequestPlayerMatchSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPlayerMatchSign.Merge(m, src)
}
func (m *RequestPlayerMatchSign) XXX_Size() int {
	return xxx_messageInfo_RequestPlayerMatchSign.Size(m)
}
func (m *RequestPlayerMatchSign) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPlayerMatchSign.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPlayerMatchSign proto.InternalMessageInfo

func (m *RequestPlayerMatchSign) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type RequestPlayerReady struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPlayerReady) Reset()         { *m = RequestPlayerReady{} }
func (m *RequestPlayerReady) String() string { return proto.CompactTextString(m) }
func (*RequestPlayerReady) ProtoMessage()    {}
func (*RequestPlayerReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{4}
}

func (m *RequestPlayerReady) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPlayerReady.Unmarshal(m, b)
}
func (m *RequestPlayerReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPlayerReady.Marshal(b, m, deterministic)
}
func (m *RequestPlayerReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPlayerReady.Merge(m, src)
}
func (m *RequestPlayerReady) XXX_Size() int {
	return xxx_messageInfo_RequestPlayerReady.Size(m)
}
func (m *RequestPlayerReady) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPlayerReady.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPlayerReady proto.InternalMessageInfo

func (m *RequestPlayerReady) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RequestPlayerReady) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type RequestGetRoom struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGetRoom) Reset()         { *m = RequestGetRoom{} }
func (m *RequestGetRoom) String() string { return proto.CompactTextString(m) }
func (*RequestGetRoom) ProtoMessage()    {}
func (*RequestGetRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{5}
}

func (m *RequestGetRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGetRoom.Unmarshal(m, b)
}
func (m *RequestGetRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGetRoom.Marshal(b, m, deterministic)
}
func (m *RequestGetRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGetRoom.Merge(m, src)
}
func (m *RequestGetRoom) XXX_Size() int {
	return xxx_messageInfo_RequestGetRoom.Size(m)
}
func (m *RequestGetRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGetRoom.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGetRoom proto.InternalMessageInfo

func (m *RequestGetRoom) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RequestGetRoom) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type RequestRoomHistory struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumberStart  int32    `protobuf:"varint,3,opt,name=sequence_numberStart,json=sequenceNumberStart,proto3" json:"sequence_numberStart,omitempty"`
	SequenceNumberEnd    int32    `protobuf:"varint,4,opt,name=sequence_numberEnd,json=sequenceNumberEnd,proto3" json:"sequence_numberEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRoomHistory) Reset()         { *m = RequestRoomHistory{} }
func (m *RequestRoomHistory) String() string { return proto.CompactTextString(m) }
func (*RequestRoomHistory) ProtoMessage()    {}
func (*RequestRoomHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{6}
}

func (m *RequestRoomHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRoomHistory.Unmarshal(m, b)
}
func (m *RequestRoomHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRoomHistory.Marshal(b, m, deterministic)
}
func (m *RequestRoomHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRoomHistory.Merge(m, src)
}
func (m *RequestRoomHistory) XXX_Size() int {
	return xxx_messageInfo_RequestRoomHistory.Size(m)
}
func (m *RequestRoomHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRoomHistory.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRoomHistory proto.InternalMessageInfo

func (m *RequestRoomHistory) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RequestRoomHistory) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RequestRoomHistory) GetSequenceNumberStart() int32 {
	if m != nil {
		return m.SequenceNumberStart
	}
	return 0
}

func (m *RequestRoomHistory) GetSequenceNumberEnd() int32 {
	if m != nil {
		return m.SequenceNumberEnd
	}
	return 0
}

type RequestPlayerMatchSignCancel struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPlayerMatchSignCancel) Reset()         { *m = RequestPlayerMatchSignCancel{} }
func (m *RequestPlayerMatchSignCancel) String() string { return proto.CompactTextString(m) }
func (*RequestPlayerMatchSignCancel) ProtoMessage()    {}
func (*RequestPlayerMatchSignCancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{7}
}

func (m *RequestPlayerMatchSignCancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPlayerMatchSignCancel.Unmarshal(m, b)
}
func (m *RequestPlayerMatchSignCancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPlayerMatchSignCancel.Marshal(b, m, deterministic)
}
func (m *RequestPlayerMatchSignCancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPlayerMatchSignCancel.Merge(m, src)
}
func (m *RequestPlayerMatchSignCancel) XXX_Size() int {
	return xxx_messageInfo_RequestPlayerMatchSignCancel.Size(m)
}
func (m *RequestPlayerMatchSignCancel) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPlayerMatchSignCancel.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPlayerMatchSignCancel proto.InternalMessageInfo

func (m *RequestPlayerMatchSignCancel) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type RequestGameOver struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32    `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Result               string   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGameOver) Reset()         { *m = RequestGameOver{} }
func (m *RequestGameOver) String() string { return proto.CompactTextString(m) }
func (*RequestGameOver) ProtoMessage()    {}
func (*RequestGameOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{8}
}

func (m *RequestGameOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGameOver.Unmarshal(m, b)
}
func (m *RequestGameOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGameOver.Marshal(b, m, deterministic)
}
func (m *RequestGameOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGameOver.Merge(m, src)
}
func (m *RequestGameOver) XXX_Size() int {
	return xxx_messageInfo_RequestGameOver.Size(m)
}
func (m *RequestGameOver) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGameOver.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGameOver proto.InternalMessageInfo

func (m *RequestGameOver) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RequestGameOver) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RequestGameOver) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *RequestGameOver) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type RequestPlayerOver struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SequenceNumber       int32    `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPlayerOver) Reset()         { *m = RequestPlayerOver{} }
func (m *RequestPlayerOver) String() string { return proto.CompactTextString(m) }
func (*RequestPlayerOver) ProtoMessage()    {}
func (*RequestPlayerOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{9}
}

func (m *RequestPlayerOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestPlayerOver.Unmarshal(m, b)
}
func (m *RequestPlayerOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestPlayerOver.Marshal(b, m, deterministic)
}
func (m *RequestPlayerOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPlayerOver.Merge(m, src)
}
func (m *RequestPlayerOver) XXX_Size() int {
	return xxx_messageInfo_RequestPlayerOver.Size(m)
}
func (m *RequestPlayerOver) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPlayerOver.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPlayerOver proto.InternalMessageInfo

func (m *RequestPlayerOver) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RequestPlayerOver) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type ResponsePlayerStatus struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	RoomId               string   `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	AddTime              int32    `protobuf:"varint,5,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	UpTime               int32    `protobuf:"varint,6,opt,name=up_time,json=upTime,proto3" json:"up_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePlayerStatus) Reset()         { *m = ResponsePlayerStatus{} }
func (m *ResponsePlayerStatus) String() string { return proto.CompactTextString(m) }
func (*ResponsePlayerStatus) ProtoMessage()    {}
func (*ResponsePlayerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{10}
}

func (m *ResponsePlayerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePlayerStatus.Unmarshal(m, b)
}
func (m *ResponsePlayerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePlayerStatus.Marshal(b, m, deterministic)
}
func (m *ResponsePlayerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePlayerStatus.Merge(m, src)
}
func (m *ResponsePlayerStatus) XXX_Size() int {
	return xxx_messageInfo_ResponsePlayerStatus.Size(m)
}
func (m *ResponsePlayerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePlayerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePlayerStatus proto.InternalMessageInfo

func (m *ResponsePlayerStatus) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponsePlayerStatus) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ResponsePlayerStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponsePlayerStatus) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponsePlayerStatus) GetAddTime() int32 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *ResponsePlayerStatus) GetUpTime() int32 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

type ResponseOtherPlayerOffline struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOtherPlayerOffline) Reset()         { *m = ResponseOtherPlayerOffline{} }
func (m *ResponseOtherPlayerOffline) String() string { return proto.CompactTextString(m) }
func (*ResponseOtherPlayerOffline) ProtoMessage()    {}
func (*ResponseOtherPlayerOffline) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{11}
}

func (m *ResponseOtherPlayerOffline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOtherPlayerOffline.Unmarshal(m, b)
}
func (m *ResponseOtherPlayerOffline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOtherPlayerOffline.Marshal(b, m, deterministic)
}
func (m *ResponseOtherPlayerOffline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOtherPlayerOffline.Merge(m, src)
}
func (m *ResponseOtherPlayerOffline) XXX_Size() int {
	return xxx_messageInfo_ResponseOtherPlayerOffline.Size(m)
}
func (m *ResponseOtherPlayerOffline) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOtherPlayerOffline.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOtherPlayerOffline proto.InternalMessageInfo

func (m *ResponseOtherPlayerOffline) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type ResponseStartBattle struct {
	SequenceNumberStart  int32    `protobuf:"varint,1,opt,name=sequence_number_start,json=sequenceNumberStart,proto3" json:"sequence_number_start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseStartBattle) Reset()         { *m = ResponseStartBattle{} }
func (m *ResponseStartBattle) String() string { return proto.CompactTextString(m) }
func (*ResponseStartBattle) ProtoMessage()    {}
func (*ResponseStartBattle) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{12}
}

func (m *ResponseStartBattle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseStartBattle.Unmarshal(m, b)
}
func (m *ResponseStartBattle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseStartBattle.Marshal(b, m, deterministic)
}
func (m *ResponseStartBattle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseStartBattle.Merge(m, src)
}
func (m *ResponseStartBattle) XXX_Size() int {
	return xxx_messageInfo_ResponseStartBattle.Size(m)
}
func (m *ResponseStartBattle) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseStartBattle.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseStartBattle proto.InternalMessageInfo

func (m *ResponseStartBattle) GetSequenceNumberStart() int32 {
	if m != nil {
		return m.SequenceNumberStart
	}
	return 0
}

type ResponseEnterBattle struct {
	RandSeek             int32     `protobuf:"varint,1,opt,name=rand_seek,json=randSeek,proto3" json:"rand_seek,omitempty"`
	RoomId               string    `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32     `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Status               int32     `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	AddTime              int32     `protobuf:"varint,5,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	Time                 int64     `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	PlayerList           []*Player `protobuf:"bytes,7,rep,name=player_list,json=playerList,proto3" json:"player_list,omitempty"`
	UdpPort              string    `protobuf:"bytes,8,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResponseEnterBattle) Reset()         { *m = ResponseEnterBattle{} }
func (m *ResponseEnterBattle) String() string { return proto.CompactTextString(m) }
func (*ResponseEnterBattle) ProtoMessage()    {}
func (*ResponseEnterBattle) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{13}
}

func (m *ResponseEnterBattle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseEnterBattle.Unmarshal(m, b)
}
func (m *ResponseEnterBattle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseEnterBattle.Marshal(b, m, deterministic)
}
func (m *ResponseEnterBattle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseEnterBattle.Merge(m, src)
}
func (m *ResponseEnterBattle) XXX_Size() int {
	return xxx_messageInfo_ResponseEnterBattle.Size(m)
}
func (m *ResponseEnterBattle) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseEnterBattle.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseEnterBattle proto.InternalMessageInfo

func (m *ResponseEnterBattle) GetRandSeek() int32 {
	if m != nil {
		return m.RandSeek
	}
	return 0
}

func (m *ResponseEnterBattle) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponseEnterBattle) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ResponseEnterBattle) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponseEnterBattle) GetAddTime() int32 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *ResponseEnterBattle) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ResponseEnterBattle) GetPlayerList() []*Player {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

func (m *ResponseEnterBattle) GetUdpPort() string {
	if m != nil {
		return m.UdpPort
	}
	return ""
}

type ResponsePushLogicFrame struct {
	Id                   int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomId               string       `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32        `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Operations           []*Operation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResponsePushLogicFrame) Reset()         { *m = ResponsePushLogicFrame{} }
func (m *ResponsePushLogicFrame) String() string { return proto.CompactTextString(m) }
func (*ResponsePushLogicFrame) ProtoMessage()    {}
func (*ResponsePushLogicFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{14}
}

func (m *ResponsePushLogicFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePushLogicFrame.Unmarshal(m, b)
}
func (m *ResponsePushLogicFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePushLogicFrame.Marshal(b, m, deterministic)
}
func (m *ResponsePushLogicFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePushLogicFrame.Merge(m, src)
}
func (m *ResponsePushLogicFrame) XXX_Size() int {
	return xxx_messageInfo_ResponsePushLogicFrame.Size(m)
}
func (m *ResponsePushLogicFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePushLogicFrame.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePushLogicFrame proto.InternalMessageInfo

func (m *ResponsePushLogicFrame) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponsePushLogicFrame) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponsePushLogicFrame) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ResponsePushLogicFrame) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type ResponseOtherPlayerOver struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SequenceNumber       int32    `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOtherPlayerOver) Reset()         { *m = ResponseOtherPlayerOver{} }
func (m *ResponseOtherPlayerOver) String() string { return proto.CompactTextString(m) }
func (*ResponseOtherPlayerOver) ProtoMessage()    {}
func (*ResponseOtherPlayerOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{15}
}

func (m *ResponseOtherPlayerOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOtherPlayerOver.Unmarshal(m, b)
}
func (m *ResponseOtherPlayerOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOtherPlayerOver.Marshal(b, m, deterministic)
}
func (m *ResponseOtherPlayerOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOtherPlayerOver.Merge(m, src)
}
func (m *ResponseOtherPlayerOver) XXX_Size() int {
	return xxx_messageInfo_ResponseOtherPlayerOver.Size(m)
}
func (m *ResponseOtherPlayerOver) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOtherPlayerOver.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOtherPlayerOver proto.InternalMessageInfo

func (m *ResponseOtherPlayerOver) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ResponseOtherPlayerOver) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type ResponseGameOver struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32    `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Result               string   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseGameOver) Reset()         { *m = ResponseGameOver{} }
func (m *ResponseGameOver) String() string { return proto.CompactTextString(m) }
func (*ResponseGameOver) ProtoMessage()    {}
func (*ResponseGameOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{16}
}

func (m *ResponseGameOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGameOver.Unmarshal(m, b)
}
func (m *ResponseGameOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGameOver.Marshal(b, m, deterministic)
}
func (m *ResponseGameOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGameOver.Merge(m, src)
}
func (m *ResponseGameOver) XXX_Size() int {
	return xxx_messageInfo_ResponseGameOver.Size(m)
}
func (m *ResponseGameOver) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGameOver.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGameOver proto.InternalMessageInfo

func (m *ResponseGameOver) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ResponseGameOver) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponseGameOver) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ResponseGameOver) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type ResponseReadyTimeout struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseReadyTimeout) Reset()         { *m = ResponseReadyTimeout{} }
func (m *ResponseReadyTimeout) String() string { return proto.CompactTextString(m) }
func (*ResponseReadyTimeout) ProtoMessage()    {}
func (*ResponseReadyTimeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{17}
}

func (m *ResponseReadyTimeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseReadyTimeout.Unmarshal(m, b)
}
func (m *ResponseReadyTimeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseReadyTimeout.Marshal(b, m, deterministic)
}
func (m *ResponseReadyTimeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseReadyTimeout.Merge(m, src)
}
func (m *ResponseReadyTimeout) XXX_Size() int {
	return xxx_messageInfo_ResponseReadyTimeout.Size(m)
}
func (m *ResponseReadyTimeout) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseReadyTimeout.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseReadyTimeout proto.InternalMessageInfo

func (m *ResponseReadyTimeout) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type ResponsePushRoomInfo struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AddTime              int32     `protobuf:"varint,2,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	Status               int32     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Timeout              int32     `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	SequenceNumber       int32     `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	RandSeek             int32     `protobuf:"varint,6,opt,name=rand_seek,json=randSeek,proto3" json:"rand_seek,omitempty"`
	PlayerList           []*Player `protobuf:"bytes,7,rep,name=player_list,json=playerList,proto3" json:"player_list,omitempty"`
	RoomId               string    `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	StartTime            int32     `protobuf:"varint,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int32     `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResponsePushRoomInfo) Reset()         { *m = ResponsePushRoomInfo{} }
func (m *ResponsePushRoomInfo) String() string { return proto.CompactTextString(m) }
func (*ResponsePushRoomInfo) ProtoMessage()    {}
func (*ResponsePushRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{18}
}

func (m *ResponsePushRoomInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePushRoomInfo.Unmarshal(m, b)
}
func (m *ResponsePushRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePushRoomInfo.Marshal(b, m, deterministic)
}
func (m *ResponsePushRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePushRoomInfo.Merge(m, src)
}
func (m *ResponsePushRoomInfo) XXX_Size() int {
	return xxx_messageInfo_ResponsePushRoomInfo.Size(m)
}
func (m *ResponsePushRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePushRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePushRoomInfo proto.InternalMessageInfo

func (m *ResponsePushRoomInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResponsePushRoomInfo) GetAddTime() int32 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *ResponsePushRoomInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponsePushRoomInfo) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ResponsePushRoomInfo) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ResponsePushRoomInfo) GetRandSeek() int32 {
	if m != nil {
		return m.RandSeek
	}
	return 0
}

func (m *ResponsePushRoomInfo) GetPlayerList() []*Player {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

func (m *ResponsePushRoomInfo) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponsePushRoomInfo) GetStartTime() int32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ResponsePushRoomInfo) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ResponsePushRoomHistory struct {
	List                 []*ResponseRoomHistory `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ResponsePushRoomHistory) Reset()         { *m = ResponsePushRoomHistory{} }
func (m *ResponsePushRoomHistory) String() string { return proto.CompactTextString(m) }
func (*ResponsePushRoomHistory) ProtoMessage()    {}
func (*ResponsePushRoomHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{19}
}

func (m *ResponsePushRoomHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePushRoomHistory.Unmarshal(m, b)
}
func (m *ResponsePushRoomHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePushRoomHistory.Marshal(b, m, deterministic)
}
func (m *ResponsePushRoomHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePushRoomHistory.Merge(m, src)
}
func (m *ResponsePushRoomHistory) XXX_Size() int {
	return xxx_messageInfo_ResponsePushRoomHistory.Size(m)
}
func (m *ResponsePushRoomHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePushRoomHistory.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePushRoomHistory proto.InternalMessageInfo

func (m *ResponsePushRoomHistory) GetList() []*ResponseRoomHistory {
	if m != nil {
		return m.List
	}
	return nil
}

type ResponseRoomHistory struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action               string   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRoomHistory) Reset()         { *m = ResponseRoomHistory{} }
func (m *ResponseRoomHistory) String() string { return proto.CompactTextString(m) }
func (*ResponseRoomHistory) ProtoMessage()    {}
func (*ResponseRoomHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{20}
}

func (m *ResponseRoomHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRoomHistory.Unmarshal(m, b)
}
func (m *ResponseRoomHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRoomHistory.Marshal(b, m, deterministic)
}
func (m *ResponseRoomHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRoomHistory.Merge(m, src)
}
func (m *ResponseRoomHistory) XXX_Size() int {
	return xxx_messageInfo_ResponseRoomHistory.Size(m)
}
func (m *ResponseRoomHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRoomHistory.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRoomHistory proto.InternalMessageInfo

func (m *ResponseRoomHistory) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponseRoomHistory) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ResponseRoomHistory) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ResponseOtherPlayerResumeGame struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SequenceNumber       int32    `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOtherPlayerResumeGame) Reset()         { *m = ResponseOtherPlayerResumeGame{} }
func (m *ResponseOtherPlayerResumeGame) String() string { return proto.CompactTextString(m) }
func (*ResponseOtherPlayerResumeGame) ProtoMessage()    {}
func (*ResponseOtherPlayerResumeGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{21}
}

func (m *ResponseOtherPlayerResumeGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOtherPlayerResumeGame.Unmarshal(m, b)
}
func (m *ResponseOtherPlayerResumeGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOtherPlayerResumeGame.Marshal(b, m, deterministic)
}
func (m *ResponseOtherPlayerResumeGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOtherPlayerResumeGame.Merge(m, src)
}
func (m *ResponseOtherPlayerResumeGame) XXX_Size() int {
	return xxx_messageInfo_ResponseOtherPlayerResumeGame.Size(m)
}
func (m *ResponseOtherPlayerResumeGame) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOtherPlayerResumeGame.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOtherPlayerResumeGame proto.InternalMessageInfo

func (m *ResponseOtherPlayerResumeGame) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ResponseOtherPlayerResumeGame) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponseOtherPlayerResumeGame) GetSequenceNumber() int32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type Player struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoleId               int32    `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Status               int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	AddTime              int32    `protobuf:"varint,5,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	UpTime               int32    `protobuf:"varint,6,opt,name=upTime,proto3" json:"upTime,omitempty"`
	RoomId               string   `protobuf:"bytes,7,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	SessionId            string   `protobuf:"bytes,8,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Timeout              int32    `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ContentType          int32    `protobuf:"varint,10,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ProtocolType         int32    `protobuf:"varint,11,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{22}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Player) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *Player) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Player) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Player) GetAddTime() int32 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *Player) GetUpTime() int32 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

func (m *Player) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Player) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *Player) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Player) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *Player) GetProtocolType() int32 {
	if m != nil {
		return m.ProtocolType
	}
	return 0
}

type ResponseRestartGame struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PlayerIds            []int32  `protobuf:"varint,2,rep,packed,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRestartGame) Reset()         { *m = ResponseRestartGame{} }
func (m *ResponseRestartGame) String() string { return proto.CompactTextString(m) }
func (*ResponseRestartGame) ProtoMessage()    {}
func (*ResponseRestartGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{23}
}

func (m *ResponseRestartGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRestartGame.Unmarshal(m, b)
}
func (m *ResponseRestartGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRestartGame.Marshal(b, m, deterministic)
}
func (m *ResponseRestartGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRestartGame.Merge(m, src)
}
func (m *ResponseRestartGame) XXX_Size() int {
	return xxx_messageInfo_ResponseRestartGame.Size(m)
}
func (m *ResponseRestartGame) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRestartGame.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRestartGame proto.InternalMessageInfo

func (m *ResponseRestartGame) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponseRestartGame) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

type ResponsePlayerMatchSignFailed struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePlayerMatchSignFailed) Reset()         { *m = ResponsePlayerMatchSignFailed{} }
func (m *ResponsePlayerMatchSignFailed) String() string { return proto.CompactTextString(m) }
func (*ResponsePlayerMatchSignFailed) ProtoMessage()    {}
func (*ResponsePlayerMatchSignFailed) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{24}
}

func (m *ResponsePlayerMatchSignFailed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePlayerMatchSignFailed.Unmarshal(m, b)
}
func (m *ResponsePlayerMatchSignFailed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePlayerMatchSignFailed.Marshal(b, m, deterministic)
}
func (m *ResponsePlayerMatchSignFailed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePlayerMatchSignFailed.Merge(m, src)
}
func (m *ResponsePlayerMatchSignFailed) XXX_Size() int {
	return xxx_messageInfo_ResponsePlayerMatchSignFailed.Size(m)
}
func (m *ResponsePlayerMatchSignFailed) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePlayerMatchSignFailed.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePlayerMatchSignFailed proto.InternalMessageInfo

func (m *ResponsePlayerMatchSignFailed) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ResponsePlayerMatchSignFailed) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ResponsePlayerMatchSignFailed) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type ResponsePlayerMatchingFailed struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RoomId               string   `protobuf:"bytes,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Code                 int32    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePlayerMatchingFailed) Reset()         { *m = ResponsePlayerMatchingFailed{} }
func (m *ResponsePlayerMatchingFailed) String() string { return proto.CompactTextString(m) }
func (*ResponsePlayerMatchingFailed) ProtoMessage()    {}
func (*ResponsePlayerMatchingFailed) Descriptor() ([]byte, []int) {
	return fileDescriptor_5df4fb110327dfd7, []int{25}
}

func (m *ResponsePlayerMatchingFailed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePlayerMatchingFailed.Unmarshal(m, b)
}
func (m *ResponsePlayerMatchingFailed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePlayerMatchingFailed.Marshal(b, m, deterministic)
}
func (m *ResponsePlayerMatchingFailed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePlayerMatchingFailed.Merge(m, src)
}
func (m *ResponsePlayerMatchingFailed) XXX_Size() int {
	return xxx_messageInfo_ResponsePlayerMatchingFailed.Size(m)
}
func (m *ResponsePlayerMatchingFailed) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePlayerMatchingFailed.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePlayerMatchingFailed proto.InternalMessageInfo

func (m *ResponsePlayerMatchingFailed) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ResponsePlayerMatchingFailed) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ResponsePlayerMatchingFailed) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ResponsePlayerMatchingFailed) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestPlayerOperations)(nil), "pb.RequestPlayerOperations")
	proto.RegisterType((*Operation)(nil), "pb.Operation")
	proto.RegisterType((*RequestPlayerResumeGame)(nil), "pb.RequestPlayerResumeGame")
	proto.RegisterType((*RequestPlayerMatchSign)(nil), "pb.RequestPlayerMatchSign")
	proto.RegisterType((*RequestPlayerReady)(nil), "pb.RequestPlayerReady")
	proto.RegisterType((*RequestGetRoom)(nil), "pb.RequestGetRoom")
	proto.RegisterType((*RequestRoomHistory)(nil), "pb.RequestRoomHistory")
	proto.RegisterType((*RequestPlayerMatchSignCancel)(nil), "pb.RequestPlayerMatchSignCancel")
	proto.RegisterType((*RequestGameOver)(nil), "pb.RequestGameOver")
	proto.RegisterType((*RequestPlayerOver)(nil), "pb.RequestPlayerOver")
	proto.RegisterType((*ResponsePlayerStatus)(nil), "pb.ResponsePlayerStatus")
	proto.RegisterType((*ResponseOtherPlayerOffline)(nil), "pb.ResponseOtherPlayerOffline")
	proto.RegisterType((*ResponseStartBattle)(nil), "pb.ResponseStartBattle")
	proto.RegisterType((*ResponseEnterBattle)(nil), "pb.ResponseEnterBattle")
	proto.RegisterType((*ResponsePushLogicFrame)(nil), "pb.ResponsePushLogicFrame")
	proto.RegisterType((*ResponseOtherPlayerOver)(nil), "pb.ResponseOtherPlayerOver")
	proto.RegisterType((*ResponseGameOver)(nil), "pb.ResponseGameOver")
	proto.RegisterType((*ResponseReadyTimeout)(nil), "pb.ResponseReadyTimeout")
	proto.RegisterType((*ResponsePushRoomInfo)(nil), "pb.ResponsePushRoomInfo")
	proto.RegisterType((*ResponsePushRoomHistory)(nil), "pb.ResponsePushRoomHistory")
	proto.RegisterType((*ResponseRoomHistory)(nil), "pb.ResponseRoomHistory")
	proto.RegisterType((*ResponseOtherPlayerResumeGame)(nil), "pb.ResponseOtherPlayerResumeGame")
	proto.RegisterType((*Player)(nil), "pb.Player")
	proto.RegisterType((*ResponseRestartGame)(nil), "pb.ResponseRestartGame")
	proto.RegisterType((*ResponsePlayerMatchSignFailed)(nil), "pb.ResponsePlayerMatchSignFailed")
	proto.RegisterType((*ResponsePlayerMatchingFailed)(nil), "pb.ResponsePlayerMatchingFailed")
}

func init() { proto.RegisterFile("proto/frame_sync.proto", fileDescriptor_5df4fb110327dfd7) }

var fileDescriptor_5df4fb110327dfd7 = []byte{
	// 1233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x4f, 0x6f, 0xdc, 0x44,
	0x14, 0xc7, 0xfb, 0xdf, 0x6f, 0xdb, 0xa4, 0x75, 0x93, 0x8d, 0xbb, 0xa1, 0x68, 0x63, 0x0e, 0x44,
	0x54, 0x49, 0x20, 0x51, 0x0f, 0x25, 0x5c, 0x28, 0x4a, 0xc2, 0xa2, 0x96, 0x54, 0x9b, 0x4a, 0x08,
	0x2e, 0x2b, 0xaf, 0x3d, 0x49, 0xac, 0xd8, 0x33, 0xc6, 0x33, 0x8e, 0xd8, 0x0b, 0x17, 0x2e, 0xf0,
	0x11, 0xe0, 0x0b, 0x70, 0xe1, 0xc4, 0x8d, 0x2f, 0xc3, 0x67, 0x41, 0x33, 0x1e, 0x7b, 0x67, 0x6c,
	0x6f, 0x80, 0x50, 0xe8, 0xcd, 0xf3, 0xde, 0xbc, 0xbf, 0xf3, 0x7b, 0x7f, 0x0c, 0x83, 0x38, 0x21,
	0x8c, 0xec, 0x9d, 0x27, 0x6e, 0x84, 0xa6, 0x74, 0x8e, 0xbd, 0x5d, 0x41, 0xb0, 0x1a, 0xf1, 0x6c,
	0x68, 0x65, 0x3c, 0x8f, 0x44, 0x11, 0xc1, 0x19, 0xdd, 0xf9, 0xd9, 0x80, 0x8d, 0x09, 0xfa, 0x26,
	0x45, 0x94, 0xbd, 0x0c, 0xdd, 0x39, 0x4a, 0x4e, 0x63, 0x94, 0xb8, 0x2c, 0x20, 0x98, 0x5a, 0x2b,
	0xd0, 0x08, 0x7c, 0xdb, 0x18, 0x19, 0xdb, 0xed, 0x49, 0x23, 0xf0, 0xad, 0x0d, 0xe8, 0x26, 0x84,
	0x44, 0xd3, 0xc0, 0xb7, 0x1b, 0x23, 0x63, 0xdb, 0x9c, 0x74, 0xf8, 0x71, 0xec, 0x5b, 0xef, 0xc1,
	0x2a, 0xe5, 0x3a, 0xb0, 0x87, 0xa6, 0x38, 0x8d, 0x66, 0x28, 0xb1, 0x9b, 0x42, 0x6a, 0x25, 0x27,
	0x7f, 0x21, 0xa8, 0xd6, 0x0e, 0x00, 0x29, 0xf4, 0xdb, 0xad, 0x51, 0x73, 0xbb, 0xbf, 0x7f, 0x77,
	0x37, 0x9e, 0xed, 0x16, 0x56, 0x27, 0xca, 0x05, 0xc7, 0x07, 0xb3, 0x60, 0x54, 0xbc, 0x59, 0x83,
	0x36, 0xba, 0x46, 0x98, 0x49, 0x5f, 0xb2, 0x03, 0xa7, 0x5e, 0xbb, 0x61, 0x8a, 0x84, 0x03, 0xe6,
	0x24, 0x3b, 0x58, 0x9b, 0x60, 0xc6, 0x22, 0x3a, 0xee, 0x7b, 0x4b, 0xa8, 0xe8, 0x65, 0x84, 0xb1,
	0xef, 0x7c, 0x5b, 0xca, 0xc0, 0x04, 0xd1, 0x34, 0x42, 0x27, 0x6e, 0x54, 0x92, 0x33, 0x74, 0xb9,
	0x7f, 0x9f, 0x0e, 0xe7, 0x09, 0x0c, 0x34, 0xcb, 0x2f, 0x5c, 0xe6, 0x5d, 0x9e, 0x05, 0x17, 0xf8,
	0x46, 0xc3, 0xce, 0xe7, 0x60, 0x95, 0x1c, 0x76, 0xfd, 0xf9, 0xed, 0x7c, 0x75, 0x8e, 0x61, 0x45,
	0xea, 0x3a, 0x41, 0x6c, 0x42, 0x48, 0x74, 0x4b, 0x3d, 0xbf, 0x1a, 0x85, 0x53, 0x5c, 0xcb, 0x67,
	0x01, 0x65, 0x24, 0xb9, 0xa5, 0x53, 0xd6, 0x87, 0xb0, 0x56, 0x4a, 0xe0, 0x19, 0x73, 0x13, 0x26,
	0xb3, 0xf8, 0x40, 0xcf, 0xa2, 0x60, 0x59, 0x3b, 0x60, 0x95, 0x44, 0x8e, 0x70, 0xfe, 0xd4, 0xf7,
	0x75, 0x81, 0x23, 0xec, 0x3b, 0x87, 0xf0, 0x76, 0x7d, 0xe6, 0x3f, 0x75, 0xb1, 0x87, 0xc2, 0x9b,
	0xf3, 0xff, 0x83, 0x01, 0xab, 0x79, 0xd2, 0xdc, 0x08, 0x9d, 0x5e, 0xa3, 0xe4, 0x3f, 0x46, 0x8a,
	0x35, 0x80, 0x4e, 0x82, 0x68, 0x1a, 0x32, 0x11, 0x12, 0x57, 0x20, 0x4e, 0xce, 0x57, 0x70, 0x5f,
	0xaf, 0xde, 0xbf, 0xf4, 0xa5, 0xc6, 0x64, 0xa3, 0x16, 0x9c, 0xbf, 0x18, 0xb0, 0x36, 0x41, 0x34,
	0x26, 0x98, 0xa2, 0x4c, 0xf9, 0x19, 0x73, 0x59, 0x5a, 0x6d, 0x0b, 0x43, 0xe8, 0xe1, 0xc0, 0xbb,
	0xc2, 0x6e, 0x84, 0x64, 0x78, 0xc5, 0x99, 0xfb, 0x4d, 0x85, 0x94, 0x8c, 0x4b, 0x9e, 0xd4, 0x8c,
	0xb4, 0xb4, 0x8c, 0x3c, 0x84, 0x9e, 0xeb, 0xfb, 0x53, 0x16, 0x44, 0xc8, 0x6e, 0x0b, 0x91, 0xae,
	0xeb, 0xfb, 0xaf, 0x82, 0x08, 0x71, 0x99, 0x34, 0xce, 0x38, 0x9d, 0x4c, 0x59, 0x1a, 0x73, 0x86,
	0xf3, 0x14, 0x86, 0xb9, 0xa3, 0xa7, 0xec, 0x12, 0x25, 0x32, 0x15, 0xe7, 0xe7, 0x61, 0x80, 0x6f,
	0xae, 0x61, 0x67, 0x0c, 0x0f, 0x72, 0x51, 0x81, 0xa3, 0x67, 0x2e, 0x63, 0x21, 0xb2, 0xf6, 0x61,
	0xbd, 0x94, 0xa4, 0x29, 0x15, 0x08, 0x34, 0x96, 0x22, 0xd0, 0xf9, 0xbe, 0xb1, 0xd0, 0x75, 0x84,
	0x19, 0x4a, 0xa4, 0xae, 0x4d, 0x30, 0x13, 0x17, 0xfb, 0x53, 0x8a, 0xd0, 0x55, 0x6e, 0x9f, 0x13,
	0xce, 0x10, 0xba, 0x7a, 0x3d, 0xc8, 0x90, 0x19, 0x6e, 0x69, 0x19, 0xbe, 0x21, 0x91, 0x16, 0xb4,
	0x8a, 0x2c, 0x36, 0x27, 0xe2, 0xdb, 0x7a, 0x0c, 0x7d, 0x99, 0xa5, 0x30, 0xa0, 0xcc, 0xee, 0x8a,
	0xd6, 0x0c, 0xbc, 0x35, 0xcb, 0x1e, 0x03, 0x19, 0xfb, 0x79, 0x40, 0x19, 0xd7, 0x9d, 0xfa, 0xf1,
	0x34, 0x26, 0x09, 0xb3, 0x7b, 0xc2, 0xed, 0x6e, 0xea, 0xc7, 0x2f, 0x49, 0xc2, 0x9c, 0x9f, 0x0c,
	0xde, 0xd3, 0x24, 0x6a, 0x52, 0x7a, 0xf9, 0x9c, 0x5c, 0x04, 0xde, 0x31, 0x9f, 0x46, 0x6f, 0x7e,
	0x9c, 0x4c, 0x79, 0xa3, 0xaf, 0xe2, 0xe4, 0xf5, 0x95, 0xcc, 0x8f, 0x06, 0xdc, 0xcb, 0x2d, 0xbc,
	0xe9, 0xce, 0xb0, 0xb7, 0xa8, 0x5e, 0x31, 0x1f, 0xf8, 0xcb, 0x93, 0x94, 0xa9, 0x16, 0x0d, 0xad,
	0x83, 0xff, 0xde, 0x50, 0xea, 0x3d, 0xa5, 0x97, 0xbc, 0x8d, 0x8f, 0xf1, 0x39, 0x51, 0xde, 0xcd,
	0x14, 0xef, 0xa6, 0x22, 0xab, 0xa1, 0x23, 0x6b, 0x59, 0xb9, 0xdb, 0xd0, 0x65, 0x99, 0x7d, 0x89,
	0xd2, 0xfc, 0x58, 0x17, 0x67, 0xbb, 0x36, 0x4e, 0xad, 0x8c, 0x3a, 0xa5, 0x32, 0xfa, 0x47, 0xe8,
	0x55, 0x32, 0xd0, 0xd3, 0x72, 0xfe, 0x08, 0x40, 0x54, 0x79, 0x16, 0x9a, 0x29, 0x6c, 0x98, 0x82,
	0x22, 0x82, 0x7b, 0x08, 0x3d, 0x84, 0x65, 0xdc, 0x90, 0x45, 0x81, 0xb0, 0x88, 0xdb, 0x39, 0x5e,
	0x20, 0x2b, 0x4f, 0x5d, 0x3e, 0x01, 0x1f, 0x43, 0x4b, 0xf8, 0x64, 0x08, 0x9f, 0x36, 0xb8, 0x4f,
	0xc5, 0xbb, 0x2c, 0xae, 0x4d, 0xc4, 0x25, 0xe7, 0xcb, 0x45, 0x0b, 0x51, 0x75, 0x94, 0x2b, 0x67,
	0x00, 0x1d, 0xd7, 0xe3, 0x98, 0xce, 0x41, 0x93, 0x9d, 0x78, 0x9a, 0x3d, 0x82, 0x19, 0x5f, 0x8a,
	0xb2, 0xf5, 0x27, 0x3f, 0x3a, 0xdf, 0xc1, 0xa3, 0x1a, 0xe8, 0xff, 0x7f, 0x9b, 0xce, 0x6f, 0x0d,
	0xe8, 0x64, 0x36, 0xeb, 0xdb, 0x40, 0x88, 0x72, 0xe5, 0x6d, 0xae, 0x3c, 0x44, 0x63, 0x7d, 0xae,
	0x34, 0x97, 0xce, 0x95, 0xbf, 0xdd, 0xf5, 0x06, 0x20, 0xe7, 0x85, 0x3e, 0x3d, 0xd4, 0xe0, 0xba,
	0x15, 0x38, 0x20, 0x4a, 0x03, 0x82, 0x17, 0x50, 0x31, 0x25, 0x65, 0xec, 0xab, 0x98, 0x36, 0x75,
	0x4c, 0x6f, 0xc1, 0x1d, 0x99, 0xf7, 0x29, 0x9b, 0xc7, 0x39, 0x58, 0xfa, 0x92, 0xf6, 0x6a, 0x1e,
	0x23, 0xeb, 0x5d, 0xb8, 0x2b, 0xf6, 0x6f, 0x8f, 0x84, 0xd9, 0x9d, 0xbe, 0xb8, 0x73, 0x27, 0x27,
	0xf2, 0x4b, 0xce, 0x0b, 0x05, 0x0d, 0x48, 0xe0, 0x50, 0x3c, 0xd5, 0xb2, 0x0a, 0xe6, 0x0e, 0x17,
	0x6f, 0x48, 0xed, 0xc6, 0xa8, 0xc9, 0xf1, 0x9b, 0x3f, 0x22, 0x75, 0x66, 0x0b, 0x0c, 0x94, 0x96,
	0x9e, 0x63, 0x37, 0x08, 0x91, 0x7f, 0x33, 0x06, 0xee, 0x41, 0x33, 0xa2, 0x17, 0xf2, 0xfd, 0xf9,
	0x27, 0x1f, 0x23, 0x1e, 0xf1, 0x91, 0x7c, 0x71, 0xf1, 0xed, 0xcc, 0xf9, 0x5e, 0x55, 0xb1, 0x11,
	0xe0, 0x8b, 0xdb, 0x99, 0xe0, 0xcd, 0x4d, 0xc4, 0x26, 0x01, 0x90, 0x47, 0x9a, 0x9b, 0x6e, 0x2d,
	0x4c, 0xef, 0xff, 0x61, 0x82, 0x29, 0x06, 0xcd, 0xd9, 0x1c, 0x7b, 0xd6, 0xc7, 0x70, 0xaf, 0xf2,
	0x3f, 0xb3, 0x99, 0x15, 0x5f, 0xed, 0xcf, 0xce, 0xd0, 0xe4, 0xcc, 0xa3, 0x28, 0x66, 0x73, 0xe7,
	0xad, 0x85, 0xb4, 0x5a, 0x21, 0x15, 0xe9, 0x05, 0x53, 0x97, 0xde, 0x87, 0xbe, 0xba, 0x98, 0x0f,
	0x6a, 0x04, 0x5d, 0x7f, 0xae, 0xcb, 0x7c, 0x00, 0xa0, 0x8c, 0xa3, 0xf5, 0xaa, 0xa7, 0xd7, 0x28,
	0xa9, 0x58, 0x51, 0x7b, 0x84, 0x6a, 0x45, 0xa1, 0xeb, 0x32, 0xef, 0x43, 0x37, 0x5f, 0xf3, 0x2d,
	0xe5, 0xbe, 0xa4, 0xe9, 0x77, 0x3f, 0x82, 0xd5, 0xf2, 0x5f, 0xc9, 0xb0, 0xe2, 0x56, 0xc1, 0xd3,
	0x65, 0x8f, 0x61, 0xbd, 0x7e, 0xaf, 0x1e, 0x2d, 0xd7, 0x90, 0xdd, 0xd0, 0xf5, 0x1c, 0x40, 0x5f,
	0x5d, 0xa5, 0xb4, 0xee, 0xa9, 0x30, 0x74, 0xa1, 0xa7, 0xb0, 0x52, 0xda, 0x3c, 0x86, 0xaa, 0x9c,
	0xce, 0xd3, 0x45, 0x3f, 0x01, 0xab, 0x66, 0x83, 0x7c, 0x47, 0x15, 0xaf, 0xf2, 0x75, 0x15, 0x4f,
	0xe0, 0x8e, 0x36, 0x6f, 0x6d, 0xad, 0xe3, 0x2b, 0x1c, 0x5d, 0xec, 0x10, 0x56, 0xcb, 0x93, 0x63,
	0xb3, 0xec, 0xf5, 0xd2, 0x67, 0xdd, 0x81, 0x5e, 0xb1, 0x6e, 0xac, 0xa9, 0x52, 0x39, 0xb5, 0xe2,
	0xa2, 0x36, 0xe0, 0xed, 0x3a, 0x43, 0x9c, 0x53, 0x79, 0x0c, 0x75, 0x47, 0xd6, 0x1e, 0x43, 0x61,
	0x54, 0xe2, 0xaa, 0xec, 0x5a, 0xcb, 0xd2, 0x59, 0x71, 0xf4, 0x00, 0xfa, 0x5a, 0xe3, 0xd3, 0x53,
	0x59, 0x30, 0x74, 0xa1, 0x93, 0x0a, 0xf6, 0x64, 0xef, 0xd9, 0xd2, 0xc2, 0xac, 0xbb, 0xa2, 0x2b,
	0x3a, 0x82, 0xb5, 0xda, 0x1e, 0x36, 0x5a, 0xa2, 0xa7, 0xb8, 0x51, 0xf1, 0xa7, 0x7e, 0xe4, 0x6e,
	0x2d, 0xc9, 0xc3, 0x92, 0xb6, 0xf2, 0xac, 0xfb, 0x75, 0x7b, 0x77, 0xef, 0x30, 0x9e, 0xcd, 0x3a,
	0x62, 0x4a, 0x1c, 0xfc, 0x19, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x1a, 0x35, 0x35, 0xec, 0x11, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FrameSyncClient is the client API for FrameSync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrameSyncClient interface {
	PlayerOperations(ctx context.Context, in *RequestPlayerOperations, opts ...grpc.CallOption) (*Empty, error)
	PlayerResumeGame(ctx context.Context, in *RequestPlayerResumeGame, opts ...grpc.CallOption) (*Empty, error)
	PlayerReady(ctx context.Context, in *RequestPlayerReady, opts ...grpc.CallOption) (*Empty, error)
	PlayerOver(ctx context.Context, in *RequestPlayerOver, opts ...grpc.CallOption) (*Empty, error)
	RoomHistory(ctx context.Context, in *RequestRoomHistory, opts ...grpc.CallOption) (*Empty, error)
	GetRoom(ctx context.Context, in *RequestGetRoom, opts ...grpc.CallOption) (*Empty, error)
	PlayerMatchSign(ctx context.Context, in *RequestPlayerMatchSign, opts ...grpc.CallOption) (*Empty, error)
	PlayerMatchSignCancel(ctx context.Context, in *RequestPlayerMatchSignCancel, opts ...grpc.CallOption) (*Empty, error)
	EnterBattle(ctx context.Context, in *ResponseEnterBattle, opts ...grpc.CallOption) (*Empty, error)
	PushLogicFrame(ctx context.Context, in *ResponsePushLogicFrame, opts ...grpc.CallOption) (*Empty, error)
	OtherPlayerOffline(ctx context.Context, in *ResponseOtherPlayerOffline, opts ...grpc.CallOption) (*Empty, error)
	ReadyTimeout(ctx context.Context, in *ResponseReadyTimeout, opts ...grpc.CallOption) (*Empty, error)
	PushRoomHistory(ctx context.Context, in *ResponsePushRoomHistory, opts ...grpc.CallOption) (*Empty, error)
	GameOver(ctx context.Context, in *ResponseGameOver, opts ...grpc.CallOption) (*Empty, error)
	PushRoomInfo(ctx context.Context, in *ResponsePushRoomInfo, opts ...grpc.CallOption) (*Empty, error)
	StartBattle(ctx context.Context, in *ResponseStartBattle, opts ...grpc.CallOption) (*Empty, error)
	OtherPlayerOver(ctx context.Context, in *ResponseOtherPlayerOver, opts ...grpc.CallOption) (*Empty, error)
	RestartGame(ctx context.Context, in *ResponseRestartGame, opts ...grpc.CallOption) (*Empty, error)
	PlayerMatchSignFailed(ctx context.Context, in *ResponsePlayerMatchSignFailed, opts ...grpc.CallOption) (*Empty, error)
	PlayerMatchingFailed(ctx context.Context, in *ResponsePlayerMatchingFailed, opts ...grpc.CallOption) (*Empty, error)
	OtherPlayerResumeGame(ctx context.Context, in *ResponseOtherPlayerResumeGame, opts ...grpc.CallOption) (*Empty, error)
}

type frameSyncClient struct {
	cc *grpc.ClientConn
}

func NewFrameSyncClient(cc *grpc.ClientConn) FrameSyncClient {
	return &frameSyncClient{cc}
}

func (c *frameSyncClient) PlayerOperations(ctx context.Context, in *RequestPlayerOperations, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerResumeGame(ctx context.Context, in *RequestPlayerResumeGame, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerResumeGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerReady(ctx context.Context, in *RequestPlayerReady, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerOver(ctx context.Context, in *RequestPlayerOver, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerOver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) RoomHistory(ctx context.Context, in *RequestRoomHistory, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/RoomHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) GetRoom(ctx context.Context, in *RequestGetRoom, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/GetRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerMatchSign(ctx context.Context, in *RequestPlayerMatchSign, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerMatchSign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerMatchSignCancel(ctx context.Context, in *RequestPlayerMatchSignCancel, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerMatchSignCancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) EnterBattle(ctx context.Context, in *ResponseEnterBattle, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/EnterBattle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PushLogicFrame(ctx context.Context, in *ResponsePushLogicFrame, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PushLogicFrame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) OtherPlayerOffline(ctx context.Context, in *ResponseOtherPlayerOffline, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/OtherPlayerOffline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) ReadyTimeout(ctx context.Context, in *ResponseReadyTimeout, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/ReadyTimeout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PushRoomHistory(ctx context.Context, in *ResponsePushRoomHistory, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PushRoomHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) GameOver(ctx context.Context, in *ResponseGameOver, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/GameOver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PushRoomInfo(ctx context.Context, in *ResponsePushRoomInfo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PushRoomInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) StartBattle(ctx context.Context, in *ResponseStartBattle, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/StartBattle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) OtherPlayerOver(ctx context.Context, in *ResponseOtherPlayerOver, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/OtherPlayerOver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) RestartGame(ctx context.Context, in *ResponseRestartGame, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/RestartGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerMatchSignFailed(ctx context.Context, in *ResponsePlayerMatchSignFailed, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerMatchSignFailed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) PlayerMatchingFailed(ctx context.Context, in *ResponsePlayerMatchingFailed, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/PlayerMatchingFailed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frameSyncClient) OtherPlayerResumeGame(ctx context.Context, in *ResponseOtherPlayerResumeGame, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.FrameSync/OtherPlayerResumeGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrameSyncServer is the server API for FrameSync service.
type FrameSyncServer interface {
	PlayerOperations(context.Context, *RequestPlayerOperations) (*Empty, error)
	PlayerResumeGame(context.Context, *RequestPlayerResumeGame) (*Empty, error)
	PlayerReady(context.Context, *RequestPlayerReady) (*Empty, error)
	PlayerOver(context.Context, *RequestPlayerOver) (*Empty, error)
	RoomHistory(context.Context, *RequestRoomHistory) (*Empty, error)
	GetRoom(context.Context, *RequestGetRoom) (*Empty, error)
	PlayerMatchSign(context.Context, *RequestPlayerMatchSign) (*Empty, error)
	PlayerMatchSignCancel(context.Context, *RequestPlayerMatchSignCancel) (*Empty, error)
	EnterBattle(context.Context, *ResponseEnterBattle) (*Empty, error)
	PushLogicFrame(context.Context, *ResponsePushLogicFrame) (*Empty, error)
	OtherPlayerOffline(context.Context, *ResponseOtherPlayerOffline) (*Empty, error)
	ReadyTimeout(context.Context, *ResponseReadyTimeout) (*Empty, error)
	PushRoomHistory(context.Context, *ResponsePushRoomHistory) (*Empty, error)
	GameOver(context.Context, *ResponseGameOver) (*Empty, error)
	PushRoomInfo(context.Context, *ResponsePushRoomInfo) (*Empty, error)
	StartBattle(context.Context, *ResponseStartBattle) (*Empty, error)
	OtherPlayerOver(context.Context, *ResponseOtherPlayerOver) (*Empty, error)
	RestartGame(context.Context, *ResponseRestartGame) (*Empty, error)
	PlayerMatchSignFailed(context.Context, *ResponsePlayerMatchSignFailed) (*Empty, error)
	PlayerMatchingFailed(context.Context, *ResponsePlayerMatchingFailed) (*Empty, error)
	OtherPlayerResumeGame(context.Context, *ResponseOtherPlayerResumeGame) (*Empty, error)
}

// UnimplementedFrameSyncServer can be embedded to have forward compatible implementations.
type UnimplementedFrameSyncServer struct {
}

func (*UnimplementedFrameSyncServer) PlayerOperations(ctx context.Context, req *RequestPlayerOperations) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerOperations not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerResumeGame(ctx context.Context, req *RequestPlayerResumeGame) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerResumeGame not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerReady(ctx context.Context, req *RequestPlayerReady) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerReady not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerOver(ctx context.Context, req *RequestPlayerOver) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerOver not implemented")
}
func (*UnimplementedFrameSyncServer) RoomHistory(ctx context.Context, req *RequestRoomHistory) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RoomHistory not implemented")
}
func (*UnimplementedFrameSyncServer) GetRoom(ctx context.Context, req *RequestGetRoom) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoom not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerMatchSign(ctx context.Context, req *RequestPlayerMatchSign) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerMatchSign not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerMatchSignCancel(ctx context.Context, req *RequestPlayerMatchSignCancel) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerMatchSignCancel not implemented")
}
func (*UnimplementedFrameSyncServer) EnterBattle(ctx context.Context, req *ResponseEnterBattle) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnterBattle not implemented")
}
func (*UnimplementedFrameSyncServer) PushLogicFrame(ctx context.Context, req *ResponsePushLogicFrame) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushLogicFrame not implemented")
}
func (*UnimplementedFrameSyncServer) OtherPlayerOffline(ctx context.Context, req *ResponseOtherPlayerOffline) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OtherPlayerOffline not implemented")
}
func (*UnimplementedFrameSyncServer) ReadyTimeout(ctx context.Context, req *ResponseReadyTimeout) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadyTimeout not implemented")
}
func (*UnimplementedFrameSyncServer) PushRoomHistory(ctx context.Context, req *ResponsePushRoomHistory) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushRoomHistory not implemented")
}
func (*UnimplementedFrameSyncServer) GameOver(ctx context.Context, req *ResponseGameOver) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameOver not implemented")
}
func (*UnimplementedFrameSyncServer) PushRoomInfo(ctx context.Context, req *ResponsePushRoomInfo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushRoomInfo not implemented")
}
func (*UnimplementedFrameSyncServer) StartBattle(ctx context.Context, req *ResponseStartBattle) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartBattle not implemented")
}
func (*UnimplementedFrameSyncServer) OtherPlayerOver(ctx context.Context, req *ResponseOtherPlayerOver) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OtherPlayerOver not implemented")
}
func (*UnimplementedFrameSyncServer) RestartGame(ctx context.Context, req *ResponseRestartGame) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartGame not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerMatchSignFailed(ctx context.Context, req *ResponsePlayerMatchSignFailed) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerMatchSignFailed not implemented")
}
func (*UnimplementedFrameSyncServer) PlayerMatchingFailed(ctx context.Context, req *ResponsePlayerMatchingFailed) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerMatchingFailed not implemented")
}
func (*UnimplementedFrameSyncServer) OtherPlayerResumeGame(ctx context.Context, req *ResponseOtherPlayerResumeGame) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OtherPlayerResumeGame not implemented")
}

func RegisterFrameSyncServer(s *grpc.Server, srv FrameSyncServer) {
	s.RegisterService(&_FrameSync_serviceDesc, srv)
}

func _FrameSync_PlayerOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlayerOperations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerOperations(ctx, req.(*RequestPlayerOperations))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerResumeGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlayerResumeGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerResumeGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerResumeGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerResumeGame(ctx, req.(*RequestPlayerResumeGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlayerReady)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerReady(ctx, req.(*RequestPlayerReady))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerOver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlayerOver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerOver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerOver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerOver(ctx, req.(*RequestPlayerOver))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_RoomHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRoomHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).RoomHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/RoomHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).RoomHistory(ctx, req.(*RequestRoomHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_GetRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).GetRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/GetRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).GetRoom(ctx, req.(*RequestGetRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerMatchSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlayerMatchSign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerMatchSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerMatchSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerMatchSign(ctx, req.(*RequestPlayerMatchSign))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerMatchSignCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPlayerMatchSignCancel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerMatchSignCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerMatchSignCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerMatchSignCancel(ctx, req.(*RequestPlayerMatchSignCancel))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_EnterBattle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseEnterBattle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).EnterBattle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/EnterBattle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).EnterBattle(ctx, req.(*ResponseEnterBattle))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PushLogicFrame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponsePushLogicFrame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PushLogicFrame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PushLogicFrame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PushLogicFrame(ctx, req.(*ResponsePushLogicFrame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_OtherPlayerOffline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseOtherPlayerOffline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).OtherPlayerOffline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/OtherPlayerOffline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).OtherPlayerOffline(ctx, req.(*ResponseOtherPlayerOffline))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_ReadyTimeout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseReadyTimeout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).ReadyTimeout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/ReadyTimeout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).ReadyTimeout(ctx, req.(*ResponseReadyTimeout))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PushRoomHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponsePushRoomHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PushRoomHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PushRoomHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PushRoomHistory(ctx, req.(*ResponsePushRoomHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_GameOver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseGameOver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).GameOver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/GameOver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).GameOver(ctx, req.(*ResponseGameOver))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PushRoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponsePushRoomInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PushRoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PushRoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PushRoomInfo(ctx, req.(*ResponsePushRoomInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_StartBattle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseStartBattle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).StartBattle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/StartBattle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).StartBattle(ctx, req.(*ResponseStartBattle))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_OtherPlayerOver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseOtherPlayerOver)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).OtherPlayerOver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/OtherPlayerOver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).OtherPlayerOver(ctx, req.(*ResponseOtherPlayerOver))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_RestartGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseRestartGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).RestartGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/RestartGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).RestartGame(ctx, req.(*ResponseRestartGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerMatchSignFailed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponsePlayerMatchSignFailed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerMatchSignFailed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerMatchSignFailed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerMatchSignFailed(ctx, req.(*ResponsePlayerMatchSignFailed))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_PlayerMatchingFailed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponsePlayerMatchingFailed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).PlayerMatchingFailed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/PlayerMatchingFailed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).PlayerMatchingFailed(ctx, req.(*ResponsePlayerMatchingFailed))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrameSync_OtherPlayerResumeGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseOtherPlayerResumeGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrameSyncServer).OtherPlayerResumeGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FrameSync/OtherPlayerResumeGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrameSyncServer).OtherPlayerResumeGame(ctx, req.(*ResponseOtherPlayerResumeGame))
	}
	return interceptor(ctx, in, info, handler)
}

var _FrameSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FrameSync",
	HandlerType: (*FrameSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PlayerOperations",
			Handler:    _FrameSync_PlayerOperations_Handler,
		},
		{
			MethodName: "PlayerResumeGame",
			Handler:    _FrameSync_PlayerResumeGame_Handler,
		},
		{
			MethodName: "PlayerReady",
			Handler:    _FrameSync_PlayerReady_Handler,
		},
		{
			MethodName: "PlayerOver",
			Handler:    _FrameSync_PlayerOver_Handler,
		},
		{
			MethodName: "RoomHistory",
			Handler:    _FrameSync_RoomHistory_Handler,
		},
		{
			MethodName: "GetRoom",
			Handler:    _FrameSync_GetRoom_Handler,
		},
		{
			MethodName: "PlayerMatchSign",
			Handler:    _FrameSync_PlayerMatchSign_Handler,
		},
		{
			MethodName: "PlayerMatchSignCancel",
			Handler:    _FrameSync_PlayerMatchSignCancel_Handler,
		},
		{
			MethodName: "EnterBattle",
			Handler:    _FrameSync_EnterBattle_Handler,
		},
		{
			MethodName: "PushLogicFrame",
			Handler:    _FrameSync_PushLogicFrame_Handler,
		},
		{
			MethodName: "OtherPlayerOffline",
			Handler:    _FrameSync_OtherPlayerOffline_Handler,
		},
		{
			MethodName: "ReadyTimeout",
			Handler:    _FrameSync_ReadyTimeout_Handler,
		},
		{
			MethodName: "PushRoomHistory",
			Handler:    _FrameSync_PushRoomHistory_Handler,
		},
		{
			MethodName: "GameOver",
			Handler:    _FrameSync_GameOver_Handler,
		},
		{
			MethodName: "PushRoomInfo",
			Handler:    _FrameSync_PushRoomInfo_Handler,
		},
		{
			MethodName: "StartBattle",
			Handler:    _FrameSync_StartBattle_Handler,
		},
		{
			MethodName: "OtherPlayerOver",
			Handler:    _FrameSync_OtherPlayerOver_Handler,
		},
		{
			MethodName: "RestartGame",
			Handler:    _FrameSync_RestartGame_Handler,
		},
		{
			MethodName: "PlayerMatchSignFailed",
			Handler:    _FrameSync_PlayerMatchSignFailed_Handler,
		},
		{
			MethodName: "PlayerMatchingFailed",
			Handler:    _FrameSync_PlayerMatchingFailed_Handler,
		},
		{
			MethodName: "OtherPlayerResumeGame",
			Handler:    _FrameSync_OtherPlayerResumeGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/frame_sync.proto",
}
