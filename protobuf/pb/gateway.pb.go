// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//长连接传输内容：一条标准的内容
type Msg struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceUid            int32    `protobuf:"varint,2,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	TargetUid            int32    `protobuf:"varint,3,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	SidFid               int32    `protobuf:"varint,4,opt,name=sid_fid,json=sidFid,proto3" json:"sid_fid,omitempty"`
	DataLength           int32    `protobuf:"varint,5,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`
	ContentType          int32    `protobuf:"varint,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ProtocolType         int32    `protobuf:"varint,7,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type,omitempty"`
	ServiceId            int32    `protobuf:"varint,8,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	FuncId               int32    `protobuf:"varint,9,opt,name=func_id,json=funcId,proto3" json:"func_id,omitempty"`
	Reserved             string   `protobuf:"bytes,10,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Content              string   `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`
	EndChar              string   `protobuf:"bytes,12,opt,name=end_char,json=endChar,proto3" json:"end_char,omitempty"`
	SourceServiceId      int32    `protobuf:"varint,13,opt,name=source_service_id,json=sourceServiceId,proto3" json:"source_service_id,omitempty"`
	SourceFuncId         int32    `protobuf:"varint,14,opt,name=source_func_id,json=sourceFuncId,proto3" json:"source_func_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Msg) GetSourceUid() int32 {
	if m != nil {
		return m.SourceUid
	}
	return 0
}

func (m *Msg) GetTargetUid() int32 {
	if m != nil {
		return m.TargetUid
	}
	return 0
}

func (m *Msg) GetSidFid() int32 {
	if m != nil {
		return m.SidFid
	}
	return 0
}

func (m *Msg) GetDataLength() int32 {
	if m != nil {
		return m.DataLength
	}
	return 0
}

func (m *Msg) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *Msg) GetProtocolType() int32 {
	if m != nil {
		return m.ProtocolType
	}
	return 0
}

func (m *Msg) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *Msg) GetFuncId() int32 {
	if m != nil {
		return m.FuncId
	}
	return 0
}

func (m *Msg) GetReserved() string {
	if m != nil {
		return m.Reserved
	}
	return ""
}

func (m *Msg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Msg) GetEndChar() string {
	if m != nil {
		return m.EndChar
	}
	return ""
}

func (m *Msg) GetSourceServiceId() int32 {
	if m != nil {
		return m.SourceServiceId
	}
	return 0
}

func (m *Msg) GetSourceFuncId() int32 {
	if m != nil {
		return m.SourceFuncId
	}
	return 0
}

type Login struct {
	SourceUid            int32    `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Login) Reset()         { *m = Login{} }
func (m *Login) String() string { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()    {}
func (*Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{1}
}

func (m *Login) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Login.Unmarshal(m, b)
}
func (m *Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Login.Marshal(b, m, deterministic)
}
func (m *Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login.Merge(m, src)
}
func (m *Login) XXX_Size() int {
	return xxx_messageInfo_Login.Size(m)
}
func (m *Login) XXX_DiscardUnknown() {
	xxx_messageInfo_Login.DiscardUnknown(m)
}

var xxx_messageInfo_Login proto.InternalMessageInfo

func (m *Login) GetSourceUid() int32 {
	if m != nil {
		return m.SourceUid
	}
	return 0
}

func (m *Login) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LoginRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Uid                  int32    `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRes) Reset()         { *m = LoginRes{} }
func (m *LoginRes) String() string { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()    {}
func (*LoginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{2}
}

func (m *LoginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRes.Unmarshal(m, b)
}
func (m *LoginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRes.Marshal(b, m, deterministic)
}
func (m *LoginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRes.Merge(m, src)
}
func (m *LoginRes) XXX_Size() int {
	return xxx_messageInfo_LoginRes.Size(m)
}
func (m *LoginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRes.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRes proto.InternalMessageInfo

func (m *LoginRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginRes) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *LoginRes) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type ProjectPushMsg struct {
	SourceUid            int32    `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	ProjectId            int32    `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ServiceId            int32    `protobuf:"varint,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	FuncId               int32    `protobuf:"varint,4,opt,name=func_id,json=funcId,proto3" json:"func_id,omitempty"`
	TargetUids           string   `protobuf:"bytes,5,opt,name=target_uids,json=targetUids,proto3" json:"target_uids,omitempty"`
	Msg                  string   `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectPushMsg) Reset()         { *m = ProjectPushMsg{} }
func (m *ProjectPushMsg) String() string { return proto.CompactTextString(m) }
func (*ProjectPushMsg) ProtoMessage()    {}
func (*ProjectPushMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{3}
}

func (m *ProjectPushMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPushMsg.Unmarshal(m, b)
}
func (m *ProjectPushMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPushMsg.Marshal(b, m, deterministic)
}
func (m *ProjectPushMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPushMsg.Merge(m, src)
}
func (m *ProjectPushMsg) XXX_Size() int {
	return xxx_messageInfo_ProjectPushMsg.Size(m)
}
func (m *ProjectPushMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPushMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPushMsg proto.InternalMessageInfo

func (m *ProjectPushMsg) GetSourceUid() int32 {
	if m != nil {
		return m.SourceUid
	}
	return 0
}

func (m *ProjectPushMsg) GetProjectId() int32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *ProjectPushMsg) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ProjectPushMsg) GetFuncId() int32 {
	if m != nil {
		return m.FuncId
	}
	return 0
}

func (m *ProjectPushMsg) GetTargetUids() string {
	if m != nil {
		return m.TargetUids
	}
	return ""
}

func (m *ProjectPushMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type KickOff struct {
	SourceUid            int32    `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickOff) Reset()         { *m = KickOff{} }
func (m *KickOff) String() string { return proto.CompactTextString(m) }
func (*KickOff) ProtoMessage()    {}
func (*KickOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{4}
}

func (m *KickOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickOff.Unmarshal(m, b)
}
func (m *KickOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickOff.Marshal(b, m, deterministic)
}
func (m *KickOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickOff.Merge(m, src)
}
func (m *KickOff) XXX_Size() int {
	return xxx_messageInfo_KickOff.Size(m)
}
func (m *KickOff) XXX_DiscardUnknown() {
	xxx_messageInfo_KickOff.DiscardUnknown(m)
}

var xxx_messageInfo_KickOff proto.InternalMessageInfo

func (m *KickOff) GetSourceUid() int32 {
	if m != nil {
		return m.SourceUid
	}
	return 0
}

func (m *KickOff) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type CfgServer struct {
	ListenIp             string   `protobuf:"bytes,1,opt,name=ListenIp,proto3" json:"ListenIp,omitempty"`
	OutIp                string   `protobuf:"bytes,2,opt,name=OutIp,proto3" json:"OutIp,omitempty"`
	OutDomain            string   `protobuf:"bytes,3,opt,name=OutDomain,proto3" json:"OutDomain,omitempty"`
	WsPort               string   `protobuf:"bytes,4,opt,name=WsPort,proto3" json:"WsPort,omitempty"`
	TcpPort              string   `protobuf:"bytes,5,opt,name=TcpPort,proto3" json:"TcpPort,omitempty"`
	UdpPort              string   `protobuf:"bytes,6,opt,name=UdpPort,proto3" json:"UdpPort,omitempty"`
	WsUri                string   `protobuf:"bytes,7,opt,name=WsUri,proto3" json:"WsUri,omitempty"`
	DefaultProtocolType  int32    `protobuf:"varint,8,opt,name=DefaultProtocolType,proto3" json:"DefaultProtocolType,omitempty"`
	DefaultContentType   int32    `protobuf:"varint,9,opt,name=DefaultContentType,proto3" json:"DefaultContentType,omitempty"`
	LoginAuthType        string   `protobuf:"bytes,10,opt,name=LoginAuthType,proto3" json:"LoginAuthType,omitempty"`
	LoginAuthSecretKey   string   `protobuf:"bytes,11,opt,name=LoginAuthSecretKey,proto3" json:"LoginAuthSecretKey,omitempty"`
	MaxClientConnNum     int32    `protobuf:"varint,12,opt,name=MaxClientConnNum,proto3" json:"MaxClientConnNum,omitempty"`
	MsgContentMax        int32    `protobuf:"varint,13,opt,name=MsgContentMax,proto3" json:"MsgContentMax,omitempty"`
	IOTimeout            int64    `protobuf:"varint,14,opt,name=IOTimeout,proto3" json:"IOTimeout,omitempty"`
	ConnTimeout          int32    `protobuf:"varint,15,opt,name=ConnTimeout,proto3" json:"ConnTimeout,omitempty"`
	ClientHeartbeatTime  int32    `protobuf:"varint,16,opt,name=ClientHeartbeatTime,proto3" json:"ClientHeartbeatTime,omitempty"`
	ServerHeartbeatTime  int32    `protobuf:"varint,17,opt,name=ServerHeartbeatTime,proto3" json:"ServerHeartbeatTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfgServer) Reset()         { *m = CfgServer{} }
func (m *CfgServer) String() string { return proto.CompactTextString(m) }
func (*CfgServer) ProtoMessage()    {}
func (*CfgServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{5}
}

func (m *CfgServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgServer.Unmarshal(m, b)
}
func (m *CfgServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgServer.Marshal(b, m, deterministic)
}
func (m *CfgServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgServer.Merge(m, src)
}
func (m *CfgServer) XXX_Size() int {
	return xxx_messageInfo_CfgServer.Size(m)
}
func (m *CfgServer) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgServer.DiscardUnknown(m)
}

var xxx_messageInfo_CfgServer proto.InternalMessageInfo

func (m *CfgServer) GetListenIp() string {
	if m != nil {
		return m.ListenIp
	}
	return ""
}

func (m *CfgServer) GetOutIp() string {
	if m != nil {
		return m.OutIp
	}
	return ""
}

func (m *CfgServer) GetOutDomain() string {
	if m != nil {
		return m.OutDomain
	}
	return ""
}

func (m *CfgServer) GetWsPort() string {
	if m != nil {
		return m.WsPort
	}
	return ""
}

func (m *CfgServer) GetTcpPort() string {
	if m != nil {
		return m.TcpPort
	}
	return ""
}

func (m *CfgServer) GetUdpPort() string {
	if m != nil {
		return m.UdpPort
	}
	return ""
}

func (m *CfgServer) GetWsUri() string {
	if m != nil {
		return m.WsUri
	}
	return ""
}

func (m *CfgServer) GetDefaultProtocolType() int32 {
	if m != nil {
		return m.DefaultProtocolType
	}
	return 0
}

func (m *CfgServer) GetDefaultContentType() int32 {
	if m != nil {
		return m.DefaultContentType
	}
	return 0
}

func (m *CfgServer) GetLoginAuthType() string {
	if m != nil {
		return m.LoginAuthType
	}
	return ""
}

func (m *CfgServer) GetLoginAuthSecretKey() string {
	if m != nil {
		return m.LoginAuthSecretKey
	}
	return ""
}

func (m *CfgServer) GetMaxClientConnNum() int32 {
	if m != nil {
		return m.MaxClientConnNum
	}
	return 0
}

func (m *CfgServer) GetMsgContentMax() int32 {
	if m != nil {
		return m.MsgContentMax
	}
	return 0
}

func (m *CfgServer) GetIOTimeout() int64 {
	if m != nil {
		return m.IOTimeout
	}
	return 0
}

func (m *CfgServer) GetConnTimeout() int32 {
	if m != nil {
		return m.ConnTimeout
	}
	return 0
}

func (m *CfgServer) GetClientHeartbeatTime() int32 {
	if m != nil {
		return m.ClientHeartbeatTime
	}
	return 0
}

func (m *CfgServer) GetServerHeartbeatTime() int32 {
	if m != nil {
		return m.ServerHeartbeatTime
	}
	return 0
}

type CfgProtoMap struct {
	Client               map[int32]*CfgProtoServiceFunc `protobuf:"bytes,1,rep,name=client,proto3" json:"client,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Server               map[int32]*CfgProtoServiceFunc `protobuf:"bytes,2,rep,name=server,proto3" json:"server,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CfgProtoMap) Reset()         { *m = CfgProtoMap{} }
func (m *CfgProtoMap) String() string { return proto.CompactTextString(m) }
func (*CfgProtoMap) ProtoMessage()    {}
func (*CfgProtoMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{6}
}

func (m *CfgProtoMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgProtoMap.Unmarshal(m, b)
}
func (m *CfgProtoMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgProtoMap.Marshal(b, m, deterministic)
}
func (m *CfgProtoMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgProtoMap.Merge(m, src)
}
func (m *CfgProtoMap) XXX_Size() int {
	return xxx_messageInfo_CfgProtoMap.Size(m)
}
func (m *CfgProtoMap) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgProtoMap.DiscardUnknown(m)
}

var xxx_messageInfo_CfgProtoMap proto.InternalMessageInfo

func (m *CfgProtoMap) GetClient() map[int32]*CfgProtoServiceFunc {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *CfgProtoMap) GetServer() map[int32]*CfgProtoServiceFunc {
	if m != nil {
		return m.Server
	}
	return nil
}

type CfgProtoServiceFunc struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceId            string   `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	FuncId               string   `protobuf:"bytes,3,opt,name=func_id,json=funcId,proto3" json:"func_id,omitempty"`
	FuncName             string   `protobuf:"bytes,4,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`
	Response             string   `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
	Request              string   `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`
	Desc                 string   `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	Demo                 string   `protobuf:"bytes,9,opt,name=demo,proto3" json:"demo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfgProtoServiceFunc) Reset()         { *m = CfgProtoServiceFunc{} }
func (m *CfgProtoServiceFunc) String() string { return proto.CompactTextString(m) }
func (*CfgProtoServiceFunc) ProtoMessage()    {}
func (*CfgProtoServiceFunc) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{7}
}

func (m *CfgProtoServiceFunc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgProtoServiceFunc.Unmarshal(m, b)
}
func (m *CfgProtoServiceFunc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgProtoServiceFunc.Marshal(b, m, deterministic)
}
func (m *CfgProtoServiceFunc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgProtoServiceFunc.Merge(m, src)
}
func (m *CfgProtoServiceFunc) XXX_Size() int {
	return xxx_messageInfo_CfgProtoServiceFunc.Size(m)
}
func (m *CfgProtoServiceFunc) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgProtoServiceFunc.DiscardUnknown(m)
}

var xxx_messageInfo_CfgProtoServiceFunc proto.InternalMessageInfo

func (m *CfgProtoServiceFunc) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CfgProtoServiceFunc) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *CfgProtoServiceFunc) GetFuncId() string {
	if m != nil {
		return m.FuncId
	}
	return ""
}

func (m *CfgProtoServiceFunc) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *CfgProtoServiceFunc) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *CfgProtoServiceFunc) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *CfgProtoServiceFunc) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CfgProtoServiceFunc) GetDemo() string {
	if m != nil {
		return m.Demo
	}
	return ""
}

func init() {
	proto.RegisterType((*Msg)(nil), "pb.Msg")
	proto.RegisterType((*Login)(nil), "pb.Login")
	proto.RegisterType((*LoginRes)(nil), "pb.LoginRes")
	proto.RegisterType((*ProjectPushMsg)(nil), "pb.ProjectPushMsg")
	proto.RegisterType((*KickOff)(nil), "pb.KickOff")
	proto.RegisterType((*CfgServer)(nil), "pb.CfgServer")
	proto.RegisterType((*CfgProtoMap)(nil), "pb.CfgProtoMap")
	proto.RegisterMapType((map[int32]*CfgProtoServiceFunc)(nil), "pb.CfgProtoMap.ClientEntry")
	proto.RegisterMapType((map[int32]*CfgProtoServiceFunc)(nil), "pb.CfgProtoMap.ServerEntry")
	proto.RegisterType((*CfgProtoServiceFunc)(nil), "pb.CfgProtoServiceFunc")
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor_f1a937782ebbded5) }

var fileDescriptor_f1a937782ebbded5 = []byte{
	// 1050 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x8e, 0x24, 0xcb, 0x12, 0x47, 0xb2, 0x63, 0x6f, 0x8a, 0x86, 0x55, 0x1a, 0xc4, 0x55, 0x93,
	0xc2, 0x30, 0x50, 0xb5, 0x75, 0x2e, 0x45, 0x9b, 0x4b, 0x4b, 0xdb, 0x8d, 0x10, 0x2b, 0x36, 0x28,
	0x1b, 0x01, 0x7a, 0x21, 0x68, 0x72, 0x44, 0xb3, 0x16, 0xb9, 0x0c, 0xb9, 0x74, 0xa3, 0xa7, 0xe9,
	0x2b, 0xf4, 0xda, 0x37, 0xe9, 0x3b, 0xf4, 0x15, 0x7a, 0x28, 0x66, 0x76, 0xf5, 0x1b, 0xa1, 0xf1,
	0x21, 0xb7, 0x9d, 0xef, 0x9b, 0xd9, 0xfd, 0xa8, 0xd9, 0x6f, 0x56, 0xb0, 0x15, 0xf9, 0x0a, 0x7f,
	0xf7, 0x27, 0xbd, 0x2c, 0x97, 0x4a, 0x8a, 0x6a, 0x76, 0xd5, 0x69, 0x07, 0x32, 0x49, 0x64, 0xaa,
	0x91, 0xee, 0x9f, 0x35, 0xa8, 0x0d, 0x8a, 0x48, 0x6c, 0x43, 0x35, 0x0e, 0xed, 0xca, 0x5e, 0x65,
	0xbf, 0xee, 0x56, 0xe3, 0x50, 0x3c, 0x06, 0x28, 0x64, 0x99, 0x07, 0xe8, 0x95, 0x71, 0x68, 0x57,
	0x19, 0xb7, 0x34, 0x72, 0xa9, 0x69, 0xe5, 0xe7, 0x11, 0x2a, 0xa6, 0x6b, 0x9a, 0xd6, 0x08, 0xd1,
	0x0f, 0xa1, 0x51, 0xc4, 0xa1, 0x37, 0x8a, 0x43, 0x7b, 0x83, 0xb9, 0xcd, 0x22, 0x0e, 0x4f, 0xe2,
	0x50, 0x3c, 0x81, 0x56, 0xe8, 0x2b, 0xdf, 0x1b, 0x63, 0x1a, 0xa9, 0x6b, 0xbb, 0xce, 0x24, 0x10,
	0x74, 0xca, 0x88, 0xf8, 0x02, 0xda, 0x81, 0x4c, 0x15, 0xa6, 0xca, 0x53, 0x93, 0x0c, 0xed, 0x4d,
	0xce, 0x68, 0x19, 0xec, 0x62, 0x92, 0xa1, 0xf8, 0x12, 0xb6, 0x58, 0x7b, 0x20, 0xc7, 0x3a, 0xa7,
	0xc1, 0x39, 0xed, 0x29, 0xc8, 0x49, 0xa4, 0x1f, 0xf3, 0xdb, 0x38, 0x40, 0x2f, 0x0e, 0xed, 0xa6,
	0xd1, 0xaf, 0x91, 0x3e, 0x0b, 0x1c, 0x95, 0x69, 0x40, 0x9c, 0xa5, 0x05, 0x52, 0xd8, 0x0f, 0x45,
	0x07, 0x9a, 0x39, 0x52, 0x1e, 0x86, 0x36, 0xec, 0x55, 0xf6, 0x2d, 0x77, 0x16, 0x0b, 0x1b, 0x1a,
	0x46, 0x87, 0xdd, 0x62, 0x6a, 0x1a, 0x8a, 0xcf, 0xa0, 0x89, 0x69, 0xe8, 0x05, 0xd7, 0x7e, 0x6e,
	0xb7, 0x35, 0x85, 0x69, 0xe8, 0x5c, 0xfb, 0xb9, 0x38, 0x80, 0x5d, 0xf3, 0x43, 0x2e, 0xe8, 0xd9,
	0xe2, 0x33, 0xef, 0x6b, 0x62, 0x38, 0x53, 0xf5, 0x14, 0xb6, 0x4d, 0xee, 0x54, 0xdc, 0xb6, 0xfe,
	0x34, 0x8d, 0x9e, 0xb0, 0xc4, 0xee, 0x0b, 0xa8, 0x9f, 0xca, 0x28, 0x4e, 0x57, 0x7a, 0x54, 0x59,
	0xed, 0xd1, 0x27, 0x50, 0x57, 0xf2, 0x06, 0x53, 0xee, 0x9e, 0xe5, 0xea, 0xa0, 0xfb, 0x12, 0x9a,
	0x5c, 0xed, 0x62, 0x21, 0x04, 0x6c, 0x04, 0x32, 0x44, 0x53, 0xca, 0x6b, 0xf1, 0x29, 0x6c, 0x62,
	0x9e, 0x0f, 0x8a, 0xc8, 0x94, 0x99, 0x48, 0xec, 0x40, 0x6d, 0xde, 0x6a, 0x5a, 0x76, 0xff, 0xaa,
	0xc0, 0xf6, 0x79, 0x2e, 0x7f, 0xc3, 0x40, 0x9d, 0x97, 0xc5, 0x35, 0x25, 0x7d, 0x40, 0xd1, 0x63,
	0x80, 0x4c, 0x17, 0x78, 0xf3, 0x4b, 0x65, 0x90, 0x7e, 0xb8, 0xd2, 0xb3, 0xda, 0xff, 0xf4, 0x6c,
	0x63, 0xa9, 0x67, 0x4f, 0xa0, 0x35, 0xbf, 0x8c, 0x05, 0x5f, 0x2a, 0xcb, 0x85, 0xd9, 0x6d, 0x2c,
	0x48, 0x7b, 0x52, 0x44, 0x7c, 0x97, 0x2c, 0x97, 0x96, 0xdd, 0x17, 0xd0, 0x78, 0x15, 0x07, 0x37,
	0x67, 0xa3, 0xd1, 0x87, 0x34, 0x0b, 0xd8, 0x50, 0x71, 0x82, 0xac, 0xb6, 0xe6, 0xf2, 0xba, 0xfb,
	0xcf, 0x06, 0x58, 0xce, 0x28, 0xa2, 0xc6, 0x61, 0x4e, 0x57, 0xe6, 0x34, 0x2e, 0x14, 0xa6, 0xfd,
	0x8c, 0xcb, 0x2d, 0x77, 0x16, 0x53, 0x0f, 0xce, 0x4a, 0xd5, 0xcf, 0xa6, 0x3d, 0xe0, 0x40, 0x7c,
	0x0e, 0xd6, 0x59, 0xa9, 0x8e, 0x64, 0xe2, 0xc7, 0x29, 0x7f, 0xa7, 0xe5, 0xce, 0x01, 0xea, 0xc0,
	0x9b, 0xe2, 0x5c, 0xe6, 0x8a, 0x3f, 0xd3, 0x72, 0x4d, 0x44, 0xd7, 0xef, 0x22, 0xc8, 0x98, 0xd0,
	0x9f, 0x38, 0x0d, 0x89, 0xb9, 0x0c, 0x35, 0xa3, 0xbf, 0x71, 0x1a, 0xd2, 0xf9, 0x6f, 0x8a, 0xcb,
	0x3c, 0x66, 0x8f, 0x58, 0xae, 0x0e, 0xc4, 0xb7, 0xf0, 0xe0, 0x08, 0x47, 0x7e, 0x39, 0x56, 0xe7,
	0x0b, 0x9e, 0x31, 0x2e, 0x59, 0x47, 0x89, 0x1e, 0x08, 0x03, 0x3b, 0x73, 0x27, 0x1a, 0xeb, 0xac,
	0x61, 0xc4, 0x53, 0xd8, 0xe2, 0x5b, 0xf6, 0x53, 0xa9, 0xae, 0x39, 0x55, 0x7b, 0x69, 0x19, 0xa4,
	0x5d, 0x67, 0xc0, 0x10, 0x83, 0x1c, 0xd5, 0x2b, 0x9c, 0x18, 0x6f, 0xad, 0x61, 0xc4, 0x01, 0xec,
	0x0c, 0xfc, 0x77, 0xce, 0x38, 0xc6, 0x94, 0x4e, 0x4b, 0x5f, 0x97, 0x09, 0xdb, 0xad, 0xee, 0xbe,
	0x87, 0x93, 0x82, 0x41, 0x11, 0x19, 0x4d, 0x03, 0xff, 0x9d, 0xf1, 0xdc, 0x32, 0x48, 0x9d, 0xe8,
	0x9f, 0x5d, 0xc4, 0x09, 0xca, 0x52, 0xb1, 0xd9, 0x6a, 0xee, 0x1c, 0x10, 0x7b, 0xd0, 0xa2, 0xed,
	0xa6, 0xfc, 0x7d, 0x3d, 0x8b, 0x16, 0x20, 0xfa, 0x25, 0xf5, 0xb1, 0x2f, 0xd1, 0xcf, 0xd5, 0x15,
	0xfa, 0x8a, 0x18, 0x7b, 0x47, 0xff, 0x92, 0x6b, 0x28, 0xaa, 0xd0, 0xf7, 0x66, 0xb9, 0x62, 0x57,
	0x57, 0xac, 0xa1, 0xba, 0x7f, 0x54, 0xa1, 0xe5, 0x8c, 0x22, 0xee, 0xc7, 0xc0, 0xcf, 0xc4, 0x73,
	0xd8, 0x0c, 0x78, 0x63, 0xbb, 0xb2, 0x57, 0xdb, 0x6f, 0x1d, 0x3e, 0xea, 0x65, 0x57, 0xbd, 0x85,
	0x84, 0x9e, 0x3e, 0xf6, 0x38, 0x55, 0xf9, 0xc4, 0x35, 0xa9, 0x54, 0xc4, 0x53, 0x2c, 0xb7, 0xab,
	0xeb, 0x8b, 0xf4, 0xc9, 0xa6, 0x48, 0xa7, 0x76, 0x5c, 0x68, 0x2d, 0xec, 0x45, 0x36, 0xba, 0xc1,
	0x89, 0xb1, 0x08, 0x2d, 0xc5, 0xd7, 0x50, 0xbf, 0xf5, 0xc7, 0xa5, 0x76, 0x47, 0xeb, 0xf0, 0xe1,
	0xe2, 0xa6, 0x66, 0xac, 0xd1, 0xd0, 0x72, 0x75, 0xd6, 0x0f, 0xd5, 0xef, 0x2b, 0xb4, 0xe7, 0xc2,
	0x51, 0x1f, 0x65, 0xcf, 0xee, 0xdf, 0x15, 0x78, 0xb0, 0x26, 0x65, 0xed, 0xa3, 0x36, 0x1f, 0x30,
	0xda, 0x92, 0xeb, 0x07, 0x8c, 0x36, 0xe5, 0x74, 0xc0, 0x3c, 0x02, 0x8b, 0x89, 0xd4, 0x4f, 0xd0,
	0x98, 0xb2, 0x49, 0xc0, 0x6b, 0x3f, 0x41, 0xf3, 0x62, 0x64, 0x32, 0x2d, 0xd0, 0xb8, 0x6f, 0x16,
	0x93, 0x31, 0x73, 0x7c, 0x5b, 0x62, 0xa1, 0x8c, 0x01, 0xa7, 0x21, 0x8d, 0x95, 0x10, 0x8b, 0x80,
	0x3d, 0x67, 0xb9, 0xbc, 0xd6, 0x58, 0x22, 0xd9, 0x56, 0x8c, 0x25, 0xf2, 0xf0, 0xdf, 0x1a, 0x34,
	0x7e, 0xd1, 0x6f, 0xb8, 0x78, 0x06, 0x4d, 0x67, 0xe8, 0xe9, 0xd9, 0x6f, 0xd1, 0xcf, 0xc2, 0xcb,
	0x4e, 0x7b, 0xb6, 0x74, 0xb1, 0xe8, 0xde, 0x13, 0xcf, 0xa0, 0xe1, 0x0c, 0xbd, 0xf3, 0x38, 0x8d,
	0x44, 0x8b, 0x28, 0x5a, 0xb9, 0xf8, 0xb6, 0xa3, 0x03, 0x49, 0xc1, 0x42, 0x9a, 0x9c, 0xa5, 0x69,
	0xa6, 0xb3, 0x58, 0xd3, 0xbd, 0x27, 0x0e, 0xa0, 0xed, 0x0c, 0xbd, 0xd9, 0x8d, 0x14, 0x5b, 0x44,
	0xcf, 0xc2, 0x0e, 0xeb, 0x38, 0x4e, 0x32, 0x35, 0xe1, 0x2d, 0x9b, 0x43, 0xc7, 0x08, 0x5c, 0x52,
	0xb5, 0x9a, 0xd6, 0x18, 0x3a, 0x77, 0x12, 0x48, 0x69, 0x77, 0x10, 0x38, 0x74, 0xee, 0x28, 0xf0,
	0x2b, 0x80, 0xa1, 0xe3, 0x4d, 0x27, 0x3f, 0x6f, 0x64, 0x82, 0xe5, 0xbc, 0xef, 0x60, 0x9b, 0x8e,
	0x9e, 0x3f, 0x6e, 0x42, 0xf0, 0xa1, 0x4b, 0xaf, 0xdd, 0x72, 0xc9, 0x3e, 0x34, 0x4e, 0x42, 0x67,
	0x2c, 0x0b, 0x14, 0x3b, 0x84, 0x9f, 0x1c, 0x71, 0x70, 0x7c, 0x8b, 0xe9, 0x8a, 0x88, 0x03, 0x68,
	0x9e, 0x84, 0x4e, 0x8e, 0xbe, 0x42, 0xb1, 0x6b, 0x52, 0x39, 0x7a, 0x3f, 0xf7, 0xe7, 0xc6, 0xaf,
	0xf5, 0xde, 0x37, 0x3f, 0x66, 0x57, 0x57, 0x9b, 0xfc, 0xef, 0xe6, 0xf9, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xa3, 0x41, 0x45, 0x52, 0xd1, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayClient interface {
	CS_Login(ctx context.Context, in *Login, opts ...grpc.CallOption) (*LoginRes, error)
	CS_Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PongRes, error)
	CS_Pong(ctx context.Context, in *PongRes, opts ...grpc.CallOption) (*PingReq, error)
	CS_Heartbeat(ctx context.Context, in *Heartbeat, opts ...grpc.CallOption) (*Empty, error)
	SC_Login(ctx context.Context, in *LoginRes, opts ...grpc.CallOption) (*Empty, error)
	SC_Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PongRes, error)
	SC_Pong(ctx context.Context, in *PongRes, opts ...grpc.CallOption) (*PingReq, error)
	SC_Heartbeat(ctx context.Context, in *Heartbeat, opts ...grpc.CallOption) (*Empty, error)
	SC_KickOff(ctx context.Context, in *KickOff, opts ...grpc.CallOption) (*Empty, error)
	SC_ProjectPush(ctx context.Context, in *ProjectPushMsg, opts ...grpc.CallOption) (*Empty, error)
	FdClose(ctx context.Context, in *FDCloseEvent, opts ...grpc.CallOption) (*Empty, error)
	FdCreate(ctx context.Context, in *FDCreateEvent, opts ...grpc.CallOption) (*Empty, error)
}

type gatewayClient struct {
	cc *grpc.ClientConn
}

func NewGatewayClient(cc *grpc.ClientConn) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) CS_Login(ctx context.Context, in *Login, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := c.cc.Invoke(ctx, "/pb.Gateway/CS_Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CS_Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PongRes, error) {
	out := new(PongRes)
	err := c.cc.Invoke(ctx, "/pb.Gateway/CS_Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CS_Pong(ctx context.Context, in *PongRes, opts ...grpc.CallOption) (*PingReq, error) {
	out := new(PingReq)
	err := c.cc.Invoke(ctx, "/pb.Gateway/CS_Pong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CS_Heartbeat(ctx context.Context, in *Heartbeat, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/CS_Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SC_Login(ctx context.Context, in *LoginRes, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/SC_Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SC_Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PongRes, error) {
	out := new(PongRes)
	err := c.cc.Invoke(ctx, "/pb.Gateway/SC_Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SC_Pong(ctx context.Context, in *PongRes, opts ...grpc.CallOption) (*PingReq, error) {
	out := new(PingReq)
	err := c.cc.Invoke(ctx, "/pb.Gateway/SC_Pong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SC_Heartbeat(ctx context.Context, in *Heartbeat, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/SC_Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SC_KickOff(ctx context.Context, in *KickOff, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/SC_KickOff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SC_ProjectPush(ctx context.Context, in *ProjectPushMsg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/SC_ProjectPush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) FdClose(ctx context.Context, in *FDCloseEvent, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/FdClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) FdCreate(ctx context.Context, in *FDCreateEvent, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Gateway/FdCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayServer is the server API for Gateway service.
type GatewayServer interface {
	CS_Login(context.Context, *Login) (*LoginRes, error)
	CS_Ping(context.Context, *PingReq) (*PongRes, error)
	CS_Pong(context.Context, *PongRes) (*PingReq, error)
	CS_Heartbeat(context.Context, *Heartbeat) (*Empty, error)
	SC_Login(context.Context, *LoginRes) (*Empty, error)
	SC_Ping(context.Context, *PingReq) (*PongRes, error)
	SC_Pong(context.Context, *PongRes) (*PingReq, error)
	SC_Heartbeat(context.Context, *Heartbeat) (*Empty, error)
	SC_KickOff(context.Context, *KickOff) (*Empty, error)
	SC_ProjectPush(context.Context, *ProjectPushMsg) (*Empty, error)
	FdClose(context.Context, *FDCloseEvent) (*Empty, error)
	FdCreate(context.Context, *FDCreateEvent) (*Empty, error)
}

// UnimplementedGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayServer struct {
}

func (*UnimplementedGatewayServer) CS_Login(ctx context.Context, req *Login) (*LoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CS_Login not implemented")
}
func (*UnimplementedGatewayServer) CS_Ping(ctx context.Context, req *PingReq) (*PongRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CS_Ping not implemented")
}
func (*UnimplementedGatewayServer) CS_Pong(ctx context.Context, req *PongRes) (*PingReq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CS_Pong not implemented")
}
func (*UnimplementedGatewayServer) CS_Heartbeat(ctx context.Context, req *Heartbeat) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CS_Heartbeat not implemented")
}
func (*UnimplementedGatewayServer) SC_Login(ctx context.Context, req *LoginRes) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SC_Login not implemented")
}
func (*UnimplementedGatewayServer) SC_Ping(ctx context.Context, req *PingReq) (*PongRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SC_Ping not implemented")
}
func (*UnimplementedGatewayServer) SC_Pong(ctx context.Context, req *PongRes) (*PingReq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SC_Pong not implemented")
}
func (*UnimplementedGatewayServer) SC_Heartbeat(ctx context.Context, req *Heartbeat) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SC_Heartbeat not implemented")
}
func (*UnimplementedGatewayServer) SC_KickOff(ctx context.Context, req *KickOff) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SC_KickOff not implemented")
}
func (*UnimplementedGatewayServer) SC_ProjectPush(ctx context.Context, req *ProjectPushMsg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SC_ProjectPush not implemented")
}
func (*UnimplementedGatewayServer) FdClose(ctx context.Context, req *FDCloseEvent) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FdClose not implemented")
}
func (*UnimplementedGatewayServer) FdCreate(ctx context.Context, req *FDCreateEvent) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FdCreate not implemented")
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_CS_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Login)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CS_Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/CS_Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CS_Login(ctx, req.(*Login))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CS_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CS_Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/CS_Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CS_Ping(ctx, req.(*PingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CS_Pong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PongRes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CS_Pong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/CS_Pong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CS_Pong(ctx, req.(*PongRes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CS_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Heartbeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CS_Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/CS_Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CS_Heartbeat(ctx, req.(*Heartbeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SC_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SC_Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/SC_Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SC_Login(ctx, req.(*LoginRes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SC_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SC_Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/SC_Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SC_Ping(ctx, req.(*PingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SC_Pong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PongRes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SC_Pong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/SC_Pong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SC_Pong(ctx, req.(*PongRes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SC_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Heartbeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SC_Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/SC_Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SC_Heartbeat(ctx, req.(*Heartbeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SC_KickOff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickOff)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SC_KickOff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/SC_KickOff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SC_KickOff(ctx, req.(*KickOff))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SC_ProjectPush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectPushMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SC_ProjectPush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/SC_ProjectPush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SC_ProjectPush(ctx, req.(*ProjectPushMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_FdClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FDCloseEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).FdClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/FdClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).FdClose(ctx, req.(*FDCloseEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_FdCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FDCreateEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).FdCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway/FdCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).FdCreate(ctx, req.(*FDCreateEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CS_Login",
			Handler:    _Gateway_CS_Login_Handler,
		},
		{
			MethodName: "CS_Ping",
			Handler:    _Gateway_CS_Ping_Handler,
		},
		{
			MethodName: "CS_Pong",
			Handler:    _Gateway_CS_Pong_Handler,
		},
		{
			MethodName: "CS_Heartbeat",
			Handler:    _Gateway_CS_Heartbeat_Handler,
		},
		{
			MethodName: "SC_Login",
			Handler:    _Gateway_SC_Login_Handler,
		},
		{
			MethodName: "SC_Ping",
			Handler:    _Gateway_SC_Ping_Handler,
		},
		{
			MethodName: "SC_Pong",
			Handler:    _Gateway_SC_Pong_Handler,
		},
		{
			MethodName: "SC_Heartbeat",
			Handler:    _Gateway_SC_Heartbeat_Handler,
		},
		{
			MethodName: "SC_KickOff",
			Handler:    _Gateway_SC_KickOff_Handler,
		},
		{
			MethodName: "SC_ProjectPush",
			Handler:    _Gateway_SC_ProjectPush_Handler,
		},
		{
			MethodName: "FdClose",
			Handler:    _Gateway_FdClose_Handler,
		},
		{
			MethodName: "FdCreate",
			Handler:    _Gateway_FdCreate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway.proto",
}
