// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.2
// source: gateway.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//长连接传输内容：一条标准的内容
type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     //未使用，保留
	SourceUid       int32  `protobuf:"varint,2,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`                      //来源UID，socket 基类在收包
	TargetUid       int32  `protobuf:"varint,3,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`                      //后端要给前端推送消息时，得用网关服务中转，同时要把C端的UID打进去
	SidFid          int32  `protobuf:"varint,4,opt,name=sid_fid,json=sidFid,proto3" json:"sid_fid,omitempty"`                               //无实际用，方便开发，service_id+func_id
	DataLength      int32  `protobuf:"varint,5,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`                   //内容的总长度
	ContentType     int32  `protobuf:"varint,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`                //内容类型
	ProtocolType    int32  `protobuf:"varint,7,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type,omitempty"`             //协议类型
	ServiceId       int32  `protobuf:"varint,8,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`                      //服务ID
	FuncId          int32  `protobuf:"varint,9,opt,name=func_id,json=funcId,proto3" json:"func_id,omitempty"`                               //函数ID
	Reserved        string `protobuf:"bytes,10,opt,name=reserved,proto3" json:"reserved,omitempty"`                                         //保留字段，未使用，后期可存sessionId
	Content         string `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`                                           //具体传输内容
	EndChar         string `protobuf:"bytes,12,opt,name=end_char,json=endChar,proto3" json:"end_char,omitempty"`                            //包结束字符，用于TCP粘包，无实际作用，只是保证消息完整性
	SourceServiceId int32  `protobuf:"varint,13,opt,name=source_service_id,json=sourceServiceId,proto3" json:"source_service_id,omitempty"` //来源服务ID，后端要给前端推送消息时，得用网关服务中转
	SourceFuncId    int32  `protobuf:"varint,14,opt,name=source_func_id,json=sourceFuncId,proto3" json:"source_func_id,omitempty"`          //来源函数ID，后端要给前端推送消息时，得用网关服务中转
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *Msg) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Msg) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *Msg) GetTargetUid() int32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *Msg) GetSidFid() int32 {
	if x != nil {
		return x.SidFid
	}
	return 0
}

func (x *Msg) GetDataLength() int32 {
	if x != nil {
		return x.DataLength
	}
	return 0
}

func (x *Msg) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Msg) GetProtocolType() int32 {
	if x != nil {
		return x.ProtocolType
	}
	return 0
}

func (x *Msg) GetServiceId() int32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *Msg) GetFuncId() int32 {
	if x != nil {
		return x.FuncId
	}
	return 0
}

func (x *Msg) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *Msg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Msg) GetEndChar() string {
	if x != nil {
		return x.EndChar
	}
	return ""
}

func (x *Msg) GetSourceServiceId() int32 {
	if x != nil {
		return x.SourceServiceId
	}
	return 0
}

func (x *Msg) GetSourceFuncId() int32 {
	if x != nil {
		return x.SourceFuncId
	}
	return 0
}

type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *Login) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *Login) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Uid    int32  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *LoginRes) Reset() {
	*x = LoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRes) ProtoMessage() {}

func (x *LoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRes.ProtoReflect.Descriptor instead.
func (*LoginRes) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginRes) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *LoginRes) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ProjectPushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                                //分类ID，保留，暂不用
	SourceUid       int32  `protobuf:"varint,2,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`                     //来源用户ID
	SourceProjectId int32  `protobuf:"varint,3,opt,name=source_project_id,json=sourceProjectId,proto3" json:"source_project_id,omitempty"` //来源项目ID
	TargetProjectId int32  `protobuf:"varint,4,opt,name=target_project_id,json=targetProjectId,proto3" json:"target_project_id,omitempty"` //目标项目ID
	TargetUids      string `protobuf:"bytes,5,opt,name=target_uids,json=targetUids,proto3" json:"target_uids,omitempty"`                   //目标用户ID列表
	Content         string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                                           //消息内容
}

func (x *ProjectPushMsg) Reset() {
	*x = ProjectPushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectPushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectPushMsg) ProtoMessage() {}

func (x *ProjectPushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectPushMsg.ProtoReflect.Descriptor instead.
func (*ProjectPushMsg) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectPushMsg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProjectPushMsg) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *ProjectPushMsg) GetSourceProjectId() int32 {
	if x != nil {
		return x.SourceProjectId
	}
	return 0
}

func (x *ProjectPushMsg) GetTargetProjectId() int32 {
	if x != nil {
		return x.TargetProjectId
	}
	return 0
}

func (x *ProjectPushMsg) GetTargetUids() string {
	if x != nil {
		return x.TargetUids
	}
	return ""
}

func (x *ProjectPushMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type KickOff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32 `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	Time      int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *KickOff) Reset() {
	*x = KickOff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOff) ProtoMessage() {}

func (x *KickOff) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOff.ProtoReflect.Descriptor instead.
func (*KickOff) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *KickOff) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *KickOff) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type CfgServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenIp            string `protobuf:"bytes,1,opt,name=ListenIp,proto3" json:"ListenIp,omitempty"`
	OutIp               string `protobuf:"bytes,2,opt,name=OutIp,proto3" json:"OutIp,omitempty"`
	OutDomain           string `protobuf:"bytes,3,opt,name=OutDomain,proto3" json:"OutDomain,omitempty"`
	WsPort              string `protobuf:"bytes,4,opt,name=WsPort,proto3" json:"WsPort,omitempty"`
	TcpPort             string `protobuf:"bytes,5,opt,name=TcpPort,proto3" json:"TcpPort,omitempty"`
	UdpPort             string `protobuf:"bytes,6,opt,name=UdpPort,proto3" json:"UdpPort,omitempty"`
	WsUri               string `protobuf:"bytes,7,opt,name=WsUri,proto3" json:"WsUri,omitempty"`
	DefaultProtocolType int32  `protobuf:"varint,8,opt,name=DefaultProtocolType,proto3" json:"DefaultProtocolType,omitempty"`
	DefaultContentType  int32  `protobuf:"varint,9,opt,name=DefaultContentType,proto3" json:"DefaultContentType,omitempty"`
	LoginAuthType       string `protobuf:"bytes,10,opt,name=LoginAuthType,proto3" json:"LoginAuthType,omitempty"`
	LoginAuthSecretKey  string `protobuf:"bytes,11,opt,name=LoginAuthSecretKey,proto3" json:"LoginAuthSecretKey,omitempty"`
	MaxClientConnNum    int32  `protobuf:"varint,12,opt,name=MaxClientConnNum,proto3" json:"MaxClientConnNum,omitempty"`
	MsgContentMax       int32  `protobuf:"varint,13,opt,name=MsgContentMax,proto3" json:"MsgContentMax,omitempty"`
	IOTimeout           int64  `protobuf:"varint,14,opt,name=IOTimeout,proto3" json:"IOTimeout,omitempty"`
	ConnTimeout         int32  `protobuf:"varint,15,opt,name=ConnTimeout,proto3" json:"ConnTimeout,omitempty"`
	ClientHeartbeatTime int32  `protobuf:"varint,16,opt,name=ClientHeartbeatTime,proto3" json:"ClientHeartbeatTime,omitempty"`
	ServerHeartbeatTime int32  `protobuf:"varint,17,opt,name=ServerHeartbeatTime,proto3" json:"ServerHeartbeatTime,omitempty"`
}

func (x *CfgServer) Reset() {
	*x = CfgServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgServer) ProtoMessage() {}

func (x *CfgServer) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgServer.ProtoReflect.Descriptor instead.
func (*CfgServer) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *CfgServer) GetListenIp() string {
	if x != nil {
		return x.ListenIp
	}
	return ""
}

func (x *CfgServer) GetOutIp() string {
	if x != nil {
		return x.OutIp
	}
	return ""
}

func (x *CfgServer) GetOutDomain() string {
	if x != nil {
		return x.OutDomain
	}
	return ""
}

func (x *CfgServer) GetWsPort() string {
	if x != nil {
		return x.WsPort
	}
	return ""
}

func (x *CfgServer) GetTcpPort() string {
	if x != nil {
		return x.TcpPort
	}
	return ""
}

func (x *CfgServer) GetUdpPort() string {
	if x != nil {
		return x.UdpPort
	}
	return ""
}

func (x *CfgServer) GetWsUri() string {
	if x != nil {
		return x.WsUri
	}
	return ""
}

func (x *CfgServer) GetDefaultProtocolType() int32 {
	if x != nil {
		return x.DefaultProtocolType
	}
	return 0
}

func (x *CfgServer) GetDefaultContentType() int32 {
	if x != nil {
		return x.DefaultContentType
	}
	return 0
}

func (x *CfgServer) GetLoginAuthType() string {
	if x != nil {
		return x.LoginAuthType
	}
	return ""
}

func (x *CfgServer) GetLoginAuthSecretKey() string {
	if x != nil {
		return x.LoginAuthSecretKey
	}
	return ""
}

func (x *CfgServer) GetMaxClientConnNum() int32 {
	if x != nil {
		return x.MaxClientConnNum
	}
	return 0
}

func (x *CfgServer) GetMsgContentMax() int32 {
	if x != nil {
		return x.MsgContentMax
	}
	return 0
}

func (x *CfgServer) GetIOTimeout() int64 {
	if x != nil {
		return x.IOTimeout
	}
	return 0
}

func (x *CfgServer) GetConnTimeout() int32 {
	if x != nil {
		return x.ConnTimeout
	}
	return 0
}

func (x *CfgServer) GetClientHeartbeatTime() int32 {
	if x != nil {
		return x.ClientHeartbeatTime
	}
	return 0
}

func (x *CfgServer) GetServerHeartbeatTime() int32 {
	if x != nil {
		return x.ServerHeartbeatTime
	}
	return 0
}

type CfgProtoMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client map[int32]*CfgProtoServiceFunc `protobuf:"bytes,1,rep,name=client,proto3" json:"client,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Server map[int32]*CfgProtoServiceFunc `protobuf:"bytes,2,rep,name=server,proto3" json:"server,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CfgProtoMap) Reset() {
	*x = CfgProtoMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgProtoMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgProtoMap) ProtoMessage() {}

func (x *CfgProtoMap) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgProtoMap.ProtoReflect.Descriptor instead.
func (*CfgProtoMap) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *CfgProtoMap) GetClient() map[int32]*CfgProtoServiceFunc {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *CfgProtoMap) GetServer() map[int32]*CfgProtoServiceFunc {
	if x != nil {
		return x.Server
	}
	return nil
}

type CfgProtoServiceFunc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	FuncId    string `protobuf:"bytes,3,opt,name=func_id,json=funcId,proto3" json:"func_id,omitempty"`
	FuncName  string `protobuf:"bytes,4,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`
	Response  string `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
	Request   string `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`
	Desc      string `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	Demo      string `protobuf:"bytes,9,opt,name=demo,proto3" json:"demo,omitempty"`
}

func (x *CfgProtoServiceFunc) Reset() {
	*x = CfgProtoServiceFunc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CfgProtoServiceFunc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CfgProtoServiceFunc) ProtoMessage() {}

func (x *CfgProtoServiceFunc) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CfgProtoServiceFunc.ProtoReflect.Descriptor instead.
func (*CfgProtoServiceFunc) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *CfgProtoServiceFunc) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CfgProtoServiceFunc) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CfgProtoServiceFunc) GetFuncId() string {
	if x != nil {
		return x.FuncId
	}
	return ""
}

func (x *CfgProtoServiceFunc) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *CfgProtoServiceFunc) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *CfgProtoServiceFunc) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *CfgProtoServiceFunc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CfgProtoServiceFunc) GetDemo() string {
	if x != nil {
		return x.Demo
	}
	return ""
}

var File_gateway_proto protoreflect.FileDescriptor

var file_gateway_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb0, 0x03, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x64, 0x5f, 0x66,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x64, 0x46, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x63,
	0x68, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x75,
	0x6e, 0x63, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x48, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xd6, 0x01, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x07, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0xeb, 0x04, 0x0a, 0x09, 0x43, 0x66, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x49, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x49, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x4f, 0x75, 0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x75,
	0x74, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x75, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x75, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x57, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x63, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x63, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x73, 0x55, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x73,
	0x55, 0x72, 0x69, 0x12, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x4d,
	0x61, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x4e, 0x75, 0x6d, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x4d, 0x61, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x4f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x49, 0x4f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x9f, 0x02, 0x0a, 0x0b, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61,
	0x70, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d,
	0x61, 0x70, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x66, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x52, 0x0a, 0x0b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x75, 0x6e, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x52, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x43, 0x66, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x75,
	0x6e, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x75, 0x6e,
	0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x6d, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x32, 0xa3,
	0x04, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x07, 0x46, 0x64,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x44, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x08, 0x46, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x44, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x25, 0x0a, 0x08, 0x43, 0x53, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x07, 0x43, 0x53, 0x5f, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x25,
	0x0a, 0x07, 0x43, 0x53, 0x5f, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x25, 0x0a, 0x08, 0x53, 0x43, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x1a, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x07, 0x53, 0x43, 0x5f, 0x50,
	0x69, 0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x25, 0x0a, 0x07, 0x53, 0x43, 0x5f, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x26, 0x0a, 0x0a, 0x53, 0x43, 0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66,
	0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x1a, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x11, 0x53, 0x43,
	0x5f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x73, 0x67, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x22, 0x0a, 0x0a, 0x53, 0x43, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x07,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData = file_gateway_proto_rawDesc
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_proto_rawDescData)
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_gateway_proto_goTypes = []interface{}{
	(*Msg)(nil),                 // 0: pb.Msg
	(*Login)(nil),               // 1: pb.Login
	(*LoginRes)(nil),            // 2: pb.LoginRes
	(*ProjectPushMsg)(nil),      // 3: pb.ProjectPushMsg
	(*KickOff)(nil),             // 4: pb.KickOff
	(*CfgServer)(nil),           // 5: pb.CfgServer
	(*CfgProtoMap)(nil),         // 6: pb.CfgProtoMap
	(*CfgProtoServiceFunc)(nil), // 7: pb.CfgProtoServiceFunc
	nil,                         // 8: pb.CfgProtoMap.ClientEntry
	nil,                         // 9: pb.CfgProtoMap.ServerEntry
	(*FDCloseEvent)(nil),        // 10: pb.FDCloseEvent
	(*FDCreateEvent)(nil),       // 11: pb.FDCreateEvent
	(*PingReq)(nil),             // 12: pb.PingReq
	(*PongRes)(nil),             // 13: pb.PongRes
	(*Heartbeat)(nil),           // 14: pb.Heartbeat
	(*Empty)(nil),               // 15: pb.Empty
}
var file_gateway_proto_depIdxs = []int32{
	8,  // 0: pb.CfgProtoMap.client:type_name -> pb.CfgProtoMap.ClientEntry
	9,  // 1: pb.CfgProtoMap.server:type_name -> pb.CfgProtoMap.ServerEntry
	7,  // 2: pb.CfgProtoMap.ClientEntry.value:type_name -> pb.CfgProtoServiceFunc
	7,  // 3: pb.CfgProtoMap.ServerEntry.value:type_name -> pb.CfgProtoServiceFunc
	10, // 4: pb.Gateway.FdClose:input_type -> pb.FDCloseEvent
	11, // 5: pb.Gateway.FdCreate:input_type -> pb.FDCreateEvent
	1,  // 6: pb.Gateway.CS_Login:input_type -> pb.Login
	12, // 7: pb.Gateway.CS_Ping:input_type -> pb.PingReq
	13, // 8: pb.Gateway.CS_Pong:input_type -> pb.PongRes
	14, // 9: pb.Gateway.CS_Heartbeat:input_type -> pb.Heartbeat
	2,  // 10: pb.Gateway.SC_Login:input_type -> pb.LoginRes
	12, // 11: pb.Gateway.SC_Ping:input_type -> pb.PingReq
	13, // 12: pb.Gateway.SC_Pong:input_type -> pb.PongRes
	14, // 13: pb.Gateway.SC_Heartbeat:input_type -> pb.Heartbeat
	4,  // 14: pb.Gateway.SC_KickOff:input_type -> pb.KickOff
	3,  // 15: pb.Gateway.SC_ProjectPushMsg:input_type -> pb.ProjectPushMsg
	0,  // 16: pb.Gateway.SC_SendMsg:input_type -> pb.Msg
	15, // 17: pb.Gateway.FdClose:output_type -> pb.Empty
	15, // 18: pb.Gateway.FdCreate:output_type -> pb.Empty
	2,  // 19: pb.Gateway.CS_Login:output_type -> pb.LoginRes
	13, // 20: pb.Gateway.CS_Ping:output_type -> pb.PongRes
	12, // 21: pb.Gateway.CS_Pong:output_type -> pb.PingReq
	15, // 22: pb.Gateway.CS_Heartbeat:output_type -> pb.Empty
	15, // 23: pb.Gateway.SC_Login:output_type -> pb.Empty
	13, // 24: pb.Gateway.SC_Ping:output_type -> pb.PongRes
	12, // 25: pb.Gateway.SC_Pong:output_type -> pb.PingReq
	15, // 26: pb.Gateway.SC_Heartbeat:output_type -> pb.Empty
	15, // 27: pb.Gateway.SC_KickOff:output_type -> pb.Empty
	15, // 28: pb.Gateway.SC_ProjectPushMsg:output_type -> pb.Empty
	15, // 29: pb.Gateway.SC_SendMsg:output_type -> pb.Empty
	17, // [17:30] is the sub-list for method output_type
	4,  // [4:17] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectPushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgProtoMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CfgProtoServiceFunc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_rawDesc = nil
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
