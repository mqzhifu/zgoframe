// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.2
// source: twin_agora.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//房间心跳
type RoomHeartbeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"` //发送者UID
	Time      int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	RoomId    string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Uid       int32  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *RoomHeartbeatReq) Reset() {
	*x = RoomHeartbeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomHeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomHeartbeatReq) ProtoMessage() {}

func (x *RoomHeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomHeartbeatReq.ProtoReflect.Descriptor instead.
func (*RoomHeartbeatReq) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{0}
}

func (x *RoomHeartbeatReq) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *RoomHeartbeatReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RoomHeartbeatReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomHeartbeatReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

//呼叫某人，加入一个房间，进行：音视频通话
type CancelCallPeopleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"` //发送者UID
	Uid       int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                              //发起者UID,长连接其实已经确定了UID，这里不写也行
	RoomId    string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`           //房间ID
}

func (x *CancelCallPeopleReq) Reset() {
	*x = CancelCallPeopleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCallPeopleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCallPeopleReq) ProtoMessage() {}

func (x *CancelCallPeopleReq) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCallPeopleReq.ProtoReflect.Descriptor instead.
func (*CancelCallPeopleReq) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{1}
}

func (x *CancelCallPeopleReq) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *CancelCallPeopleReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CancelCallPeopleReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

//专家发出应答选择
type CallVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"` //发送者UID
	Uid       int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                              //发起者UID,长连接其实已经确定了UID，这里不写也行
	RoomId    string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`           //房间ID
}

func (x *CallVote) Reset() {
	*x = CallVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallVote) ProtoMessage() {}

func (x *CallVote) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallVote.ProtoReflect.Descriptor instead.
func (*CallVote) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{2}
}

func (x *CallVote) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *CallVote) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CallVote) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

//呼叫某人，加入一个房间，进行：音视频通话
type CallPeopleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid  int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`    //发送者UID
	Uid        int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                                 //发起者UID,长连接其实已经确定了UID，这里不写也行
	TargetUid  int32  `protobuf:"varint,3,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`    //希望指定用户，进行音视频-通话
	Channel    string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`                          //双方进入某个特定的频道(可以为空,由后端随机生成一个,能发送给双方)
	PeopleType int32  `protobuf:"varint,5,opt,name=people_type,json=peopleType,proto3" json:"people_type,omitempty"` //呼叫人群类型：1 呼叫所有人，2 按照<小组>呼叫 3 用户自己指定呼叫的人
	PeopleRole int32  `protobuf:"varint,6,opt,name=people_role,json=peopleRole,proto3" json:"people_role,omitempty"` //呼叫人群角色：1普通用户2专家
}

func (x *CallPeopleReq) Reset() {
	*x = CallPeopleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallPeopleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallPeopleReq) ProtoMessage() {}

func (x *CallPeopleReq) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallPeopleReq.ProtoReflect.Descriptor instead.
func (*CallPeopleReq) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{3}
}

func (x *CallPeopleReq) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *CallPeopleReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CallPeopleReq) GetTargetUid() int32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *CallPeopleReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CallPeopleReq) GetPeopleType() int32 {
	if x != nil {
		return x.PeopleType
	}
	return 0
}

func (x *CallPeopleReq) GetPeopleRole() int32 {
	if x != nil {
		return x.PeopleRole
	}
	return 0
}

//给发发起呼叫者，做出应答
type CallPeopleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid  int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`   //发送者UID
	ReceiveUid string `protobuf:"bytes,2,opt,name=receive_uid,json=receiveUid,proto3" json:"receive_uid,omitempty"` //已接收呼叫的用户ID
	Channel    string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`                         //双方进入某个特定的频道(可以为空,由后端随机生成一个,能发送给双方)
	ErrCode    int32  `protobuf:"varint,4,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`         //0,没有错误，1所有专家均不在线，请等待一会，重新呼叫
	ErrMsg     string `protobuf:"bytes,5,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`             //错误消息
	RoomId     string `protobuf:"bytes,6,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`             //roomId,C端呼叫验证通过后会创建一个虚拟的房间号
}

func (x *CallPeopleRes) Reset() {
	*x = CallPeopleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallPeopleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallPeopleRes) ProtoMessage() {}

func (x *CallPeopleRes) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallPeopleRes.ProtoReflect.Descriptor instead.
func (*CallPeopleRes) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{4}
}

func (x *CallPeopleRes) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *CallPeopleRes) GetReceiveUid() string {
	if x != nil {
		return x.ReceiveUid
	}
	return ""
}

func (x *CallPeopleRes) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CallPeopleRes) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CallPeopleRes) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *CallPeopleRes) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

//某人进入了一个房间/频道，通知给C端
type PeopleEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"` //发送者UID
	Uid       int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                              //发起者UID,长连接其实已经确定了UID，这里不写也行
	Channel   string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`                       //双方进入某个特定的频道(可以为空,由后端随机生成一个,能发送给双方)
	RoomId    string `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`           //房间ID
}

func (x *PeopleEntry) Reset() {
	*x = PeopleEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeopleEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeopleEntry) ProtoMessage() {}

func (x *PeopleEntry) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeopleEntry.ProtoReflect.Descriptor instead.
func (*PeopleEntry) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{5}
}

func (x *PeopleEntry) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *PeopleEntry) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PeopleEntry) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PeopleEntry) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

//某人进入了一个房间/频道，通知给C端
type PeopleLeaveRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"`
	Uid       int32  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                    //发起者UID,长连接其实已经确定了UID，这里不写也行
	Channel   string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`             //双方进入某个特定的频道(可以为空,由后端随机生成一个,能发送给双方)
	RoomId    string `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` //房间ID
}

func (x *PeopleLeaveRes) Reset() {
	*x = PeopleLeaveRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeopleLeaveRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeopleLeaveRes) ProtoMessage() {}

func (x *PeopleLeaveRes) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeopleLeaveRes.ProtoReflect.Descriptor instead.
func (*PeopleLeaveRes) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{6}
}

func (x *PeopleLeaveRes) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *PeopleLeaveRes) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PeopleLeaveRes) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PeopleLeaveRes) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

//给某人推送一条消息
type CallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUid int32  `protobuf:"varint,1,opt,name=source_uid,json=sourceUid,proto3" json:"source_uid,omitempty"` //发送者UID
	SendUid   int32  `protobuf:"varint,2,opt,name=send_uid,json=sendUid,proto3" json:"send_uid,omitempty"`       //发起者UID，如果是系统发送：uid=99999
	TargetUid int32  `protobuf:"varint,3,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"` //收消息的UID
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                       //消息具体的内容，这里可以自定义成json格式
	MsgType   int32  `protobuf:"varint,5,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`       //消息分类
	RoomId    string `protobuf:"bytes,6,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`           //房间ID
}

func (x *CallReply) Reset() {
	*x = CallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twin_agora_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallReply) ProtoMessage() {}

func (x *CallReply) ProtoReflect() protoreflect.Message {
	mi := &file_twin_agora_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallReply.ProtoReflect.Descriptor instead.
func (*CallReply) Descriptor() ([]byte, []int) {
	return file_twin_agora_proto_rawDescGZIP(), []int{7}
}

func (x *CallReply) GetSourceUid() int32 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *CallReply) GetSendUid() int32 {
	if x != nil {
		return x.SendUid
	}
	return 0
}

func (x *CallReply) GetTargetUid() int32 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *CallReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CallReply) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *CallReply) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

var File_twin_agora_proto protoreflect.FileDescriptor

var file_twin_agora_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x6f, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x56,
	0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xbb, 0x01,
	0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x6f,
	0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0d,
	0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0b, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x0e, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x09, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65,
	0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x32, 0xd6, 0x06, 0x0a, 0x09, 0x54, 0x77, 0x69, 0x6e, 0x41, 0x67, 0x6f, 0x72, 0x61,
	0x12, 0x2a, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x1a,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d,
	0x43, 0x53, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x13, 0x43, 0x53, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x43, 0x53,
	0x5f, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e, 0x43, 0x53,
	0x5f, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a,
	0x13, 0x43, 0x53, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x56, 0x6f,
	0x74, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x2e, 0x0a, 0x11, 0x43, 0x53, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x44, 0x65, 0x6e, 0x79, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x56, 0x6f,
	0x74, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x35, 0x0a, 0x10, 0x43, 0x53, 0x5f, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x43, 0x61, 0x6c,
	0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x13, 0x53, 0x43, 0x5f, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x43, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x11, 0x53, 0x43, 0x5f, 0x43, 0x61, 0x6c, 0x6c,
	0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x6e, 0x79, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x07, 0x46, 0x64, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x44, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x2a, 0x0a, 0x08, 0x46, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x44, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e,
	0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_twin_agora_proto_rawDescOnce sync.Once
	file_twin_agora_proto_rawDescData = file_twin_agora_proto_rawDesc
)

func file_twin_agora_proto_rawDescGZIP() []byte {
	file_twin_agora_proto_rawDescOnce.Do(func() {
		file_twin_agora_proto_rawDescData = protoimpl.X.CompressGZIP(file_twin_agora_proto_rawDescData)
	})
	return file_twin_agora_proto_rawDescData
}

var file_twin_agora_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_twin_agora_proto_goTypes = []interface{}{
	(*RoomHeartbeatReq)(nil),    // 0: pb.RoomHeartbeatReq
	(*CancelCallPeopleReq)(nil), // 1: pb.CancelCallPeopleReq
	(*CallVote)(nil),            // 2: pb.CallVote
	(*CallPeopleReq)(nil),       // 3: pb.CallPeopleReq
	(*CallPeopleRes)(nil),       // 4: pb.CallPeopleRes
	(*PeopleEntry)(nil),         // 5: pb.PeopleEntry
	(*PeopleLeaveRes)(nil),      // 6: pb.PeopleLeaveRes
	(*CallReply)(nil),           // 7: pb.CallReply
	(*Heartbeat)(nil),           // 8: pb.Heartbeat
	(*FDCloseEvent)(nil),        // 9: pb.FDCloseEvent
	(*FDCreateEvent)(nil),       // 10: pb.FDCreateEvent
	(*Empty)(nil),               // 11: pb.Empty
}
var file_twin_agora_proto_depIdxs = []int32{
	8,  // 0: pb.TwinAgora.CS_Heartbeat:input_type -> pb.Heartbeat
	3,  // 1: pb.TwinAgora.CS_CallPeople:input_type -> pb.CallPeopleReq
	1,  // 2: pb.TwinAgora.CS_CancelCallPeople:input_type -> pb.CancelCallPeopleReq
	5,  // 3: pb.TwinAgora.CS_PeopleEntry:input_type -> pb.PeopleEntry
	6,  // 4: pb.TwinAgora.CS_PeopleLeave:input_type -> pb.PeopleLeaveRes
	2,  // 5: pb.TwinAgora.CS_CallPeopleAccept:input_type -> pb.CallVote
	2,  // 6: pb.TwinAgora.CS_CallPeopleDeny:input_type -> pb.CallVote
	0,  // 7: pb.TwinAgora.CS_RoomHeartbeat:input_type -> pb.RoomHeartbeatReq
	4,  // 8: pb.TwinAgora.SC_CallPeople:input_type -> pb.CallPeopleRes
	1,  // 9: pb.TwinAgora.SC_CancelCallPeople:input_type -> pb.CancelCallPeopleReq
	5,  // 10: pb.TwinAgora.SC_PeopleEntry:input_type -> pb.PeopleEntry
	6,  // 11: pb.TwinAgora.SC_PeopleLeave:input_type -> pb.PeopleLeaveRes
	7,  // 12: pb.TwinAgora.SC_CallReply:input_type -> pb.CallReply
	2,  // 13: pb.TwinAgora.SC_CallPeopleAccept:input_type -> pb.CallVote
	2,  // 14: pb.TwinAgora.SC_CallPeopleDeny:input_type -> pb.CallVote
	9,  // 15: pb.TwinAgora.FdClose:input_type -> pb.FDCloseEvent
	10, // 16: pb.TwinAgora.FdCreate:input_type -> pb.FDCreateEvent
	11, // 17: pb.TwinAgora.CS_Heartbeat:output_type -> pb.Empty
	11, // 18: pb.TwinAgora.CS_CallPeople:output_type -> pb.Empty
	11, // 19: pb.TwinAgora.CS_CancelCallPeople:output_type -> pb.Empty
	11, // 20: pb.TwinAgora.CS_PeopleEntry:output_type -> pb.Empty
	11, // 21: pb.TwinAgora.CS_PeopleLeave:output_type -> pb.Empty
	11, // 22: pb.TwinAgora.CS_CallPeopleAccept:output_type -> pb.Empty
	11, // 23: pb.TwinAgora.CS_CallPeopleDeny:output_type -> pb.Empty
	11, // 24: pb.TwinAgora.CS_RoomHeartbeat:output_type -> pb.Empty
	11, // 25: pb.TwinAgora.SC_CallPeople:output_type -> pb.Empty
	11, // 26: pb.TwinAgora.SC_CancelCallPeople:output_type -> pb.Empty
	11, // 27: pb.TwinAgora.SC_PeopleEntry:output_type -> pb.Empty
	11, // 28: pb.TwinAgora.SC_PeopleLeave:output_type -> pb.Empty
	11, // 29: pb.TwinAgora.SC_CallReply:output_type -> pb.Empty
	11, // 30: pb.TwinAgora.SC_CallPeopleAccept:output_type -> pb.Empty
	11, // 31: pb.TwinAgora.SC_CallPeopleDeny:output_type -> pb.Empty
	11, // 32: pb.TwinAgora.FdClose:output_type -> pb.Empty
	11, // 33: pb.TwinAgora.FdCreate:output_type -> pb.Empty
	17, // [17:34] is the sub-list for method output_type
	0,  // [0:17] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_twin_agora_proto_init() }
func file_twin_agora_proto_init() {
	if File_twin_agora_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_twin_agora_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomHeartbeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCallPeopleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallPeopleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallPeopleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeopleEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeopleLeaveRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twin_agora_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_twin_agora_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_twin_agora_proto_goTypes,
		DependencyIndexes: file_twin_agora_proto_depIdxs,
		MessageInfos:      file_twin_agora_proto_msgTypes,
	}.Build()
	File_twin_agora_proto = out.File
	file_twin_agora_proto_rawDesc = nil
	file_twin_agora_proto_goTypes = nil
	file_twin_agora_proto_depIdxs = nil
}
