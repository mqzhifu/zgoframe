syntax = "proto3";

import "common.proto";

package pb;
option go_package ="./;pb";


service FrameSync {
    rpc CS_PlayerReady             ( PlayerReady)           returns (Empty) {}//匹配成功/进入文章后，玩家需要再次确认：准备
    rpc CS_PlayerOperations        ( LogicFrame )           returns (Empty) {}//玩家推送操作记录
    rpc CS_PlayerResumeGame        ( PlayerResumeGame)      returns (Empty) {}//掉线恢复游戏
    rpc CS_PlayerOver              ( PlayerOver)            returns (Empty) {}//玩家死亡
    rpc CS_RoomHistory             ( ReqRoomHistory)        returns (Empty) {}//房间历史记录，如：玩家操作信息
    rpc CS_RoomBaseInfo            ( RoomBaseInfo)          returns (Empty) {}//获取一个房间的基础信息

    rpc SC_ReadyTimeout            ( ReadyTimeout)          returns (Empty) {}//准备超时
    rpc SC_EnterBattle             ( EnterBattle)           returns (Empty) {}//开始游戏前初始化
    rpc SC_LogicFrame              ( LogicFrame)            returns (Empty) {}//推送逻辑帧
    rpc SC_RoomHistory             ( RoomHistoryList)       returns (Empty) {}//推送逻辑帧
    rpc SC_RoomBaseInfo            ( RoomBaseInfo)          returns (Empty) {}//房间信息
    rpc SC_OtherPlayerOffline      ( OtherPlayerOffline)    returns (Empty) {}//其它玩家掉线
    rpc SC_OtherPlayerOver         ( PlayerOver)            returns (Empty) {}//其它玩家已死亡
    rpc SC_OtherPlayerResumeGame   ( PlayerResumeGame)      returns (Empty) {}//通知其它玩家，有玩家断线后已恢复
    rpc SC_StartBattle             ( StartBattle)           returns (Empty) {}//开始战斗
    rpc SC_RestartGame             ( RestartGame)           returns (Empty) {}//玩家均已在线，重新开始游戏
    rpc SC_GameOver                ( GameOver)              returns (Empty) {}//一局游戏结束
}

message RoomBaseInfo{
    string  id 	                = 1;
    int32   add_time            = 2;
    int32   status              = 3;
    int32   timeout 	        = 4;
    int32   sequence_number     = 5;
    int32   rand_seek           = 6;
    repeated int32 player_ids = 7;
    string  room_id             = 8;
    int32   start_time          = 9;
    int32   end_time 	        =10;
}

message PlayerResumeGame{
    int32 player_id         = 1;
    string room_id          = 2;
    int32 sequence_number   = 3;
}

message PlayerReady{
    int32 player_id     = 1;
    string room_id      = 2;
}

message ReqRoomHistory{
    int32 player_id             = 1;
    string room_id              = 2;
    int32 sequence_numberStart  = 3;
    int32 sequence_numberEnd    = 4;
}

message RoomHistoryList{
    repeated RoomHistory list = 1;
}

message RoomHistory{
	int32  id      = 1;
	string action  = 2;
	string content = 3;
}

message GameOver{
    int32 player_id         = 1;
    string room_id          = 2;
    int32 sequence_number   = 3;
    string result           = 4;
}

message PlayerOver{
    int32 player_id = 1;
    int32 sequence_number   = 2;
}

message OtherPlayerOffline{
    int32 player_id = 1;
}

message StartBattle{
    int32 sequence_number_start = 1;
}

message EnterBattle{
    int32   rand_seek           = 1;
    string  room_id             = 2;
    int32   sequence_number     = 3;
    int32   status              = 4;
    int32   add_time            = 5;
    int64   time                = 6;
    string  udp_port            = 7;
    repeated int32 player_ids   = 8;


}

message LogicFrame{
	int32 id 	                    = 1;
	string room_id 		            = 2;
	int32 sequence_number           = 3;
	repeated Operation operations   = 4;
}

message Operation{
	int32   id 	        = 1;
	string  event 	    = 2;
	string  value 	    = 3;
	int32   player_id 	= 4;
}

message ReadyTimeout{
    string room_id      = 1;
}

message RestartGame{
    string      room_id             = 1;
    repeated    int32 player_ids    = 2;
}


//message Player{
//    int32   id            = 1;
//    string  username      = 2;
//    string  nickname      = 3;
//    int32   status        = 4;
//    int32   add_time      = 5;
//    int32   upTime        = 6;
//    string  room_id       = 7;
//    string  session_id    = 8;
//    int32   timeout       = 9;
//   int32   content_type  = 10;
//    int32   protocol_type = 11;
//}

//message PlayerStatus{
//    int32   id            = 1;
//    string  nickname      = 2;
//    int32   status        = 3;
//    string  room_id       = 4;
//    int32   add_time      = 5;
//    int32   up_time       = 6;
//}



